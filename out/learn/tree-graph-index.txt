2:I[2972,["918","static/chunks/918-3273b83890f10546.js","972","static/chunks/972-011bba60ed155615.js","930","static/chunks/930-3262a6c9c5acace4.js","289","static/chunks/app/learn/%5Btopic%5D/page-4ab144227f7a7b3e.js"],""]
3:I[5907,["918","static/chunks/918-3273b83890f10546.js","972","static/chunks/972-011bba60ed155615.js","930","static/chunks/930-3262a6c9c5acace4.js","289","static/chunks/app/learn/%5Btopic%5D/page-4ab144227f7a7b3e.js"],"default"]
5:I[4707,[],""]
7:I[6423,[],""]
8:I[2,["918","static/chunks/918-3273b83890f10546.js","710","static/chunks/710-dfaa11b4dff08f8e.js","972","static/chunks/972-011bba60ed155615.js","233","static/chunks/233-3e0c1d820a17eca9.js","185","static/chunks/app/layout-333f4adcd11f8f39.js"],"default",1]
4:T10c2,
# Tree/Graph Problems

**LeetCode Tree/Graph problem collection for technical interviews**

## ðŸ“Š Overview

- **Total Problems**: 18
- **Difficulty Range**: Easy to Hard
- **Language**: TypeScript
- **Focus**: Technical interview preparation

## ðŸ“‹ Problem List

- [Maximum Depth of Binary Tree](problems/01-maximum-depth-of-binary-tree.md) - **Hard** - [LeetCode](https://leetcode.com/problems/maximum-depth-of-binary-tree/)\n- [Validate Binary Search Tree](problems/02-validate-binary-search-tree.md) - **Hard** - [LeetCode](https://leetcode.com/problems/validate-binary-search-tree/)\n- [Binary Tree Level Order Traversal](problems/03-binary-tree-level-order-traversal.md) - **Hard** - [LeetCode](https://leetcode.com/problems/binary-tree-level-order-traversal/)\n- [Symmetric Tree](problems/04-symmetric-tree.md) - **Hard** - [LeetCode](https://leetcode.com/problems/symmetric-tree/)\n- [Convert Sorted Array to Binary Search Tree](problems/05-convert-sorted-array-to-binary-search-tree.md) - **Easy** - [LeetCode](https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/)\n- [Binary Tree Inorder Traversal](problems/06-binary-tree-inorder-traversal.md) - **Easy** - [LeetCode](https://leetcode.com/problems/binary-tree-inorder-traversal/)\n- [Binary Tree Zigzag Level Order Traversal](problems/07-binary-tree-zigzag-level-order-traversal.md) - **Hard** - [LeetCode](https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/)\n- [Construct Binary Tree from Preorder and Inorder Traversal](problems/08-construct-binary-tree-from-preorder-and-inorder-traversal.md) - **Easy** - [LeetCode](https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/)\n- [Populating Next Right Pointers in Each Node](problems/09-populating-next-right-pointers-in-each-node.md) - **Easy** - [LeetCode](https://leetcode.com/problems/populating-next-right-pointers-in-each-node/)\n- [Kth Smallest Element in a BST](problems/10-kth-smallest-element-in-a-bst.md) - **Easy** - [LeetCode](https://leetcode.com/problems/kth-smallest-element-in-a-bst/)\n- [Inorder Successor in BST](problems/11-inorder-successor-in-bst.md) - **Easy** - [LeetCode](https://leetcode.com/problems/inorder-successor-in-bst/)\n- [Number of Island](problems/12-number-of-islands.md) - **Hard** - [LeetCode](https://leetcode.com/problems/number-of-islands/)\n- [Word Ladder](problems/13-word-ladder.md) - **Hard** - [LeetCode](https://leetcode.com/problems/word-ladder/)\n- [Serialize and Deserialize Binary Tree](problems/14-serialize-deserialize-binary-tree.md) - **Easy** - [LeetCode](https://leetcode.com/problems/serialize-and-deserialize-binary-tree/)\n- [Course Schedule II](problems/15-course-schedule-ii.md) - **Easy** - [LeetCode](https://leetcode.com/problems/course-schedule-ii/)\n- [Lowest Common Ancestor of a Binary Tree](problems/16-lowest-common-ancestor-binary-tree.md) - **Hard** - [LeetCode](https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/)\n- [Binary Tree Maximum Path Sum](problems/17-binary-tree-maximum-path-sum.md) - **Hard** - [LeetCode](https://leetcode.com/problems/binary-tree-maximum-path-sum/)\n- [Alien Dictionary](problems/18-alien-dictionary.md) - **Hard** - [LeetCode](https://leetcode.com/problems/alien-dictionary/)\n

## ðŸŽ¯ Key Concepts

- Tree traversal (DFS, BFS)
- Binary search trees
- Graph algorithms
- Topological sorting
- Union-Find

## ðŸ“š Study Strategy

### Beginner Level
1. Start with Easy problems
2. Understand basic patterns
3. Focus on time complexity
4. Practice implementation

### Intermediate Level
1. Tackle Medium problems
2. Learn optimization techniques
3. Handle edge cases
4. Practice multiple approaches

### Advanced Level
1. Solve Hard problems
2. Optimize space complexity
3. Interview simulation
4. Explain solutions clearly

## ðŸ”— Navigation

- [Back to LeetCode Index](../index.md)
- [All Categories](../README.md)
 other_name="Tree/Graph" ;;
            "linked-list") other_name="Linked List" ;;
            "dp") other_name="Dynamic Programming" ;;
            "sorting-searching") other_name="Sorting/Searching" ;;
            *) other_name="" ;;
        esac
        echo "- [](..//README.md)"
    fi
done)

---

**Total Problems: 18** | **Last Updated: 2025-07-13**
6:["topic","tree-graph-index","d"]
0:["fejmt13PAtxRD63R9Wq_i",[[["",{"children":["learn",{"children":[["topic","tree-graph-index","d"],{"children":["__PAGE__?{\"topic\":\"tree-graph-index\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["learn",{"children":[["topic","tree-graph-index","d"],{"children":["__PAGE__",{},[["$L1",["$","div",null,{"className":"max-w-6xl mx-auto px-8 py-24","children":[["$","div",null,{"className":"flex items-center gap-4 mb-8","children":["$","$L2",null,{"href":"/learn","children":["$","button",null,{"className":"flex items-center gap-2 bg-gray-100 border border-gray-300 text-gray-700 px-4 py-3 rounded-md font-medium hover:bg-gray-200 transition-colors","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-arrow-left ","children":[["$","path","1l729n",{"d":"m12 19-7-7 7-7"}],["$","path","x3x0zl",{"d":"M19 12H5"}],"$undefined"]}],"Back to Learn"]}]}]}],["$","div",null,{"className":"bg-white border border-gray-200 rounded-lg p-8 mb-8","children":[["$","div",null,{"className":"flex items-center justify-between mb-4","children":[["$","h1",null,{"className":"text-3xl font-bold text-gray-900","children":"Tree/Graph Problems"}],["$","div",null,{"className":"flex gap-4","children":[["$","button",null,{"className":"flex items-center gap-2 bg-transparent text-gray-700 border border-gray-300 px-6 py-3 rounded-md font-semibold hover:bg-gray-50 transition-colors","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-star ","children":[["$","polygon","8f66p6",{"points":"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"}],"$undefined"]}],"Bookmark"]}],["$","button",null,{"className":"flex items-center gap-2 bg-transparent text-gray-700 border border-gray-300 px-6 py-3 rounded-md font-semibold hover:bg-gray-50 transition-colors","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-share2 ","children":[["$","circle","gq8acd",{"cx":"18","cy":"5","r":"3"}],["$","circle","w7nqdw",{"cx":"6","cy":"12","r":"3"}],["$","circle","1xt0gg",{"cx":"18","cy":"19","r":"3"}],["$","line","47mynk",{"x1":"8.59","x2":"15.42","y1":"13.51","y2":"17.49"}],["$","line","1n3mei",{"x1":"15.41","x2":"8.59","y1":"6.51","y2":"10.49"}],"$undefined"]}],"Share"]}]]}]]}],["$","div",null,{"className":"flex gap-8 mb-4","children":[["$","div",null,{"className":"flex items-center gap-2 text-sm text-gray-600","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":16,"height":16,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-clock ","children":[["$","circle","1mglay",{"cx":"12","cy":"12","r":"10"}],["$","polyline","68esgv",{"points":"12 6 12 12 16 14"}],"$undefined"]}],"2-3 hours"]}],["$","span",null,{"className":"px-3 py-1 rounded-full text-xs font-semibold text-white bg-yellow-500","children":"Intermediate"}],["$","span",null,{"className":"px-3 py-1 rounded-full text-xs font-semibold bg-blue-100 text-blue-700","children":"Tree/Graph"}]]}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-4","children":[["$","span","0",{"className":"bg-gray-100 text-gray-600 px-3 py-1 rounded-md text-xs font-medium","children":"Tree/Graph"}],["$","span","1",{"className":"bg-gray-100 text-gray-600 px-3 py-1 rounded-md text-xs font-medium","children":"LeetCode"}],["$","span","2",{"className":"bg-gray-100 text-gray-600 px-3 py-1 rounded-md text-xs font-medium","children":"Interview Preparation"}]]}],["$","p",null,{"className":"text-lg text-gray-700 leading-relaxed","children":"LeetCode Tree/Graph problems with TypeScript solutions"}]]}],["$","div",null,{"className":"grid grid-cols-1 lg:grid-cols-3 gap-8","children":[["$","div",null,{"className":"lg:col-span-2","children":["$","div",null,{"className":"bg-white border border-gray-200 rounded-lg p-8","children":["$","$L3",null,{"content":"$4"}]}]}],["$","div",null,{"className":"space-y-6","children":[["$","div",null,{"className":"bg-white border border-gray-200 rounded-lg p-6","children":[["$","h3",null,{"className":"text-lg font-semibold text-gray-900 mb-4","children":"Your Progress"}],["$","div",null,{"className":"w-full bg-gray-200 rounded-full h-2 mb-2","children":["$","div",null,{"className":"bg-blue-600 h-2 rounded-full","style":{"width":"25%"}}]}],["$","p",null,{"className":"text-sm text-gray-600","children":"25% Complete"}]]}],false]}]]}]]}],null],null],null]},[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","learn","children","$6","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","learn","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/interview/_next/static/css/387024c6a2216908.css","precedence":"next","crossOrigin":"$undefined"}]],["$","$L8",null,{"children":["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}],"params":{}}]],null],null],["$L9",null]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","meta","2",{"name":"next-size-adjust"}]]
1:null
