2:I[5907,["918","static/chunks/918-3273b83890f10546.js","930","static/chunks/930-3262a6c9c5acace4.js","687","static/chunks/app/docs/%5B...slug%5D/page-036ada1d0a865043.js"],"default"]
4:I[4707,[],""]
6:I[6423,[],""]
7:I[2,["918","static/chunks/918-3273b83890f10546.js","710","static/chunks/710-dfaa11b4dff08f8e.js","972","static/chunks/972-011bba60ed155615.js","233","static/chunks/233-3e0c1d820a17eca9.js","185","static/chunks/app/layout-333f4adcd11f8f39.js"],"default",1]
3:T153a,
# Advanced Array Patterns for FAANG Interviews

## üéØ Core Patterns Every Mid-Level Developer Must Master

### 1. Sliding Window Technique

**When to Use:** Subarray/substring problems with contiguous elements
**Time Complexity:** O(n) instead of O(n¬≤)

#### Pattern Template:
```typescript
function slidingWindow(arr: number[], target: number): number {
    let left = 0, right = 0;
    let windowSum = 0;
    let result = 0;
    
    while (right < arr.length) {
        // Expand window
        windowSum += arr[right];
        
        // Contract window if needed
        while (windowSum > target) {
            windowSum -= arr[left];
            left++;
        }
        
        // Update result
        result = Math.max(result, right - left + 1);
        right++;
    }
    
    return result;
}
```

#### FAANG Interview Problems:

**Google Favorite:** Longest Substring Without Repeating Characters
```typescript
function lengthOfLongestSubstring(s: string): number {
    const charSet = new Set<string>();
    let left = 0, maxLength = 0;
    
    for (let right = 0; right < s.length; right++) {
        while (charSet.has(s[right])) {
            charSet.delete(s[left]);
            left++;
        }
        charSet.add(s[right]);
        maxLength = Math.max(maxLength, right - left + 1);
    }
    
    return maxLength;
}

// Test cases for interview
console.log(lengthOfLongestSubstring("abcabcbb")); // 3
console.log(lengthOfLongestSubstring("bbbbb")); // 1
console.log(lengthOfLongestSubstring("pwwkew")); // 3
```

**Meta Favorite:** Minimum Window Substring
```typescript
function minWindow(s: string, t: string): string {
    if (s.length < t.length) return "";
    
    const targetCount = new Map<string, number>();
    for (const char of t) {
        targetCount.set(char, (targetCount.get(char) || 0) + 1);
    }
    
    let left = 0, right = 0;
    let formed = 0;
    const required = targetCount.size;
    const windowCounts = new Map<string, number>();
    
    let minLen = Infinity;
    let minLeft = 0;
    
    while (right < s.length) {
        const char = s[right];
        windowCounts.set(char, (windowCounts.get(char) || 0) + 1);
        
        if (targetCount.has(char) && windowCounts.get(char) === targetCount.get(char)) {
            formed++;
        }
        
        while (left <= right && formed === required) {
            if (right - left + 1 < minLen) {
                minLen = right - left + 1;
                minLeft = left;
            }
            
            const leftChar = s[left];
            windowCounts.set(leftChar, windowCounts.get(leftChar)! - 1);
            if (targetCount.has(leftChar) && windowCounts.get(leftChar)! < targetCount.get(leftChar)!) {
                formed--;
            }
            left++;
        }
        right++;
    }
    
    return minLen === Infinity ? "" : s.substring(minLeft, minLeft + minLen);
}
```

### 2. Two Pointers Mastery

#### Amazon's Favorite: Container With Most Water
```typescript
function maxArea(height: number[]): number {
    let left = 0, right = height.length - 1;
    let maxWater = 0;
    
    while (left < right) {
        const width = right - left;
        const currentWater = Math.min(height[left], height[right]) * width;
        maxWater = Math.max(maxWater, currentWater);
        
        // Move pointer with smaller height
        if (height[left] < height[right]) {
            left++;
        } else {
            right--;
        }
    }
    
    return maxWater;
}

// Interview follow-up: What if we need to find the actual container positions?
function maxAreaWithPositions(height: number[]): [number, number, number] {
    let left = 0, right = height.length - 1;
    let maxWater = 0;
    let bestLeft = 0, bestRight = 0;
    
    while (left < right) {
        const width = right - left;
        const currentWater = Math.min(height[left], height[right]) * width;
        
        if (currentWater > maxWater) {
            maxWater = currentWater;
            bestLeft = left;
            bestRight = right;
        }
        
        if (height[left] < height[right]) {
            left++;
        } else {
            right--;
        }
    }
    
    return [maxWater, bestLeft, bestRight];
}
```

## üî• FAANG-Specific Problem Patterns

### Google: Focus on Optimal Solutions
- Always ask about time/space complexity
- Prefer O(n) solutions over O(n log n)
- Master bit manipulation for optimization

### Meta: React-Related Array Problems
- Virtual scrolling implementations
- Efficient list rendering
- State management with arrays

### Amazon: Leadership Principles in Code
- Write clean, maintainable solutions
- Consider edge cases thoroughly
- Optimize for customer experience (performance)

## üìä Interview Success Metrics

**For Mid-Level (3-5 years):**
- Solve 80% of Medium problems in 25-30 minutes
- Solve 40% of Hard problems in 45 minutes
- Explain time/space complexity clearly
- Provide multiple approaches when possible

## üéØ Practice Schedule

**Week 1-2:** Master sliding window (15 problems)
**Week 3-4:** Perfect two pointers (20 problems)
**Week 5-6:** Advanced patterns combination (10 problems)

## üí° Pro Tips for FAANG Interviews

1. **Always clarify constraints first**
2. **Start with brute force, then optimize**
3. **Think out loud during problem solving**
4. **Test with edge cases**
5. **Discuss trade-offs between solutions**5:["slug","src/content/leetcode/array/advanced-patterns","c"]
0:["fjDGwqtt1UnBZeA2uH4xO",[[["",{"children":["docs",{"children":[["slug","src/content/leetcode/array/advanced-patterns","c"],{"children":["__PAGE__?{\"slug\":[\"src\",\"content\",\"leetcode\",\"array\",\"advanced-patterns\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["slug","src/content/leetcode/array/advanced-patterns","c"],{"children":["__PAGE__",{},[["$L1",["$","div",null,{"style":{"maxWidth":"1200px","margin":"0 auto","padding":"2rem","paddingTop":"6rem"},"children":[["$","div",null,{"style":{"marginBottom":"2rem"},"children":[["$","nav",null,{"style":{"color":"#64748b","fontSize":"0.9rem","marginBottom":"1rem"},"children":[["$","a",null,{"href":"/interview","style":{"color":"#3b82f6","textDecoration":"none"},"children":"Home"}]," > ",["$","span",null,{"children":"src > content > leetcode > array > advanced-patterns"}]]}],["$","h1",null,{"style":{"fontSize":"2.5rem","fontWeight":"800","marginBottom":"0.5rem","color":"#1e293b"},"children":"Advanced Array Patterns for FAANG Interviews"}],["$","div",null,{"style":{"color":"#64748b","fontSize":"0.9rem","marginBottom":"2rem"},"children":[["$","span",null,{"children":["üìÅ ","src/content/leetcode/array/advanced-patterns.md"]}],"$undefined","$undefined"]}]]}],["$","$L2",null,{"content":"$3"}]]}],null],null],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/interview/_next/static/css/387024c6a2216908.css","precedence":"next","crossOrigin":"$undefined"}]],["$","$L7",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}],"params":{}}]],null],null],["$L8",null]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Advanced Array Patterns for FAANG Interviews - Frontend Interview Docs"}],["$","meta","3",{"name":"description","content":" # Advanced Array Patterns for FAANG Interviews  ## üéØ Core Patterns Every Mid-Level Developer Must Master  ### 1. Sliding Window Technique  **When to Use:** Su"}],["$","meta","4",{"property":"og:title","content":"Advanced Array Patterns for FAANG Interviews - Frontend Interview Docs"}],["$","meta","5",{"property":"og:description","content":" # Advanced Array Patterns for FAANG Interviews  ## üéØ Core Patterns Every Mid-Level Developer Must Master  ### 1. Sliding Window Technique  **When to Use:** Su"}],["$","meta","6",{"property":"og:type","content":"article"}],["$","meta","7",{"name":"twitter:card","content":"summary"}],["$","meta","8",{"name":"twitter:title","content":"Advanced Array Patterns for FAANG Interviews - Frontend Interview Docs"}],["$","meta","9",{"name":"twitter:description","content":" # Advanced Array Patterns for FAANG Interviews  ## üéØ Core Patterns Every Mid-Level Developer Must Master  ### 1. Sliding Window Technique  **When to Use:** Su"}],["$","meta","10",{"name":"next-size-adjust"}]]
1:null
