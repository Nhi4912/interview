"use strict";(self.webpackChunkfrontend_interview_guide=self.webpackChunkfrontend_interview_guide||[]).push([[9914],{1032:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"frontend/system-design/README","title":"System Design Interview Preparation Guide","description":"Table of Contents","source":"@site/docs/frontend/system-design/README.md","sourceDirName":"frontend/system-design","slug":"/frontend/system-design/","permalink":"/interview/docs/frontend/system-design/","draft":false,"unlisted":false,"editUrl":"https://github.com/Nhi4912/interview/tree/main/docs/frontend/system-design/README.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"HTML & CSS Interview Preparation","permalink":"/interview/docs/frontend/html-css/"},"next":{"title":"Frontend Architecture for companies Interviews","permalink":"/interview/docs/frontend/system-design/frontend-architecture"}}');var t=i(4848),s=i(8453);const l={},a="System Design Interview Preparation Guide",o={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Core Concepts",id:"core-concepts",level:2},{value:"System Design Fundamentals",id:"system-design-fundamentals",level:3},{value:"1. Scalability",id:"1-scalability",level:4},{value:"2. Availability",id:"2-availability",level:4},{value:"3. Performance",id:"3-performance",level:4},{value:"Frontend Architecture",id:"frontend-architecture",level:2},{value:"Modern Frontend Architecture",id:"modern-frontend-architecture",level:3},{value:"1. Micro-Frontends",id:"1-micro-frontends",level:4},{value:"2. Monorepo Architecture",id:"2-monorepo-architecture",level:4},{value:"3. Component-Driven Architecture",id:"3-component-driven-architecture",level:4},{value:"Application Architecture Patterns",id:"application-architecture-patterns",level:3},{value:"1. Layered Architecture",id:"1-layered-architecture",level:4},{value:"2. Feature-Based Architecture",id:"2-feature-based-architecture",level:4},{value:"Component Design",id:"component-design",level:2},{value:"Component Design Principles",id:"component-design-principles",level:3},{value:"1. Single Responsibility Principle",id:"1-single-responsibility-principle",level:4},{value:"2. Composition Pattern",id:"2-composition-pattern",level:4},{value:"3. Render Props Pattern",id:"3-render-props-pattern",level:4},{value:"Advanced Component Patterns",id:"advanced-component-patterns",level:3},{value:"1. Higher-Order Components (HOC)",id:"1-higher-order-components-hoc",level:4},{value:"2. Custom Hooks",id:"2-custom-hooks",level:4},{value:"State Management",id:"state-management",level:2},{value:"State Management Patterns",id:"state-management-patterns",level:3},{value:"1. Local State",id:"1-local-state",level:4},{value:"2. Global State",id:"2-global-state",level:4},{value:"3. Server State",id:"3-server-state",level:4},{value:"Common Interview Questions",id:"common-interview-questions",level:2},{value:"Q1: Design a scalable frontend architecture for a large application",id:"q1-design-a-scalable-frontend-architecture-for-a-large-application",level:3},{value:"Q2: How would you design a component library?",id:"q2-how-would-you-design-a-component-library",level:3},{value:"Q3: Explain the difference between Redux and Context API",id:"q3-explain-the-difference-between-redux-and-context-api",level:3},{value:"Q4: How would you optimize a slow React application?",id:"q4-how-would-you-optimize-a-slow-react-application",level:3},{value:"Q5: Design a real-time chat application",id:"q5-design-a-real-time-chat-application",level:3},{value:"Design Patterns",id:"design-patterns",level:2},{value:"Frontend Design Patterns",id:"frontend-design-patterns",level:3},{value:"1. Observer Pattern",id:"1-observer-pattern",level:4},{value:"2. Factory Pattern",id:"2-factory-pattern",level:4},{value:"3. Strategy Pattern",id:"3-strategy-pattern",level:4},{value:"Scalability",id:"scalability",level:2},{value:"Scaling Frontend Applications",id:"scaling-frontend-applications",level:3},{value:"1. Code Splitting",id:"1-code-splitting",level:4},{value:"2. Caching Strategies",id:"2-caching-strategies",level:4},{value:"3. Load Balancing",id:"3-load-balancing",level:4},{value:"Practice Problems",id:"practice-problems",level:2},{value:"Problem 1: Design a Social Media Feed",id:"problem-1-design-a-social-media-feed",level:3},{value:"Problem 2: Build a Component Library",id:"problem-2-build-a-component-library",level:3},{value:"Problem 3: Design a Real-time Dashboard",id:"problem-3-design-a-real-time-dashboard",level:3},{value:"Problem 4: Implement Micro-Frontends",id:"problem-4-implement-micro-frontends",level:3},{value:"Problem 5: Create a State Management Solution",id:"problem-5-create-a-state-management-solution",level:3},{value:"Problem 6: Design a File Upload System",id:"problem-6-design-a-file-upload-system",level:3},{value:"Problem 7: Build a Search Interface",id:"problem-7-build-a-search-interface",level:3},{value:"Problem 8: Design a Notification System",id:"problem-8-design-a-notification-system",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"system-design-interview-preparation-guide",children:"System Design Interview Preparation Guide"})}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#core-concepts",children:"Core Concepts"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#frontend-architecture",children:"Frontend Architecture"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#component-design",children:"Component Design"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#state-management",children:"State Management"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#common-interview-questions",children:"Common Interview Questions"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#design-patterns",children:"Design Patterns"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#scalability",children:"Scalability"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#practice-problems",children:"Practice Problems"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,t.jsx)(n.h3,{id:"system-design-fundamentals",children:"System Design Fundamentals"}),"\n",(0,t.jsx)(n.h4,{id:"1-scalability",children:"1. Scalability"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Ability of a system to handle increased load without performance degradation."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Types"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Horizontal Scaling"}),": Adding more machines/servers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Vertical Scaling"}),": Adding more resources to existing machines"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Load Balancing"}),": Distributing traffic across multiple servers"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"2-availability",children:"2. Availability"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Percentage of time a system is operational and accessible."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Metrics"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"99.9% (Three nines)"}),": 8.76 hours downtime per year"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"99.99% (Four nines)"}),": 52.56 minutes downtime per year"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"99.999% (Five nines)"}),": 5.26 minutes downtime per year"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"3-performance",children:"3. Performance"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": How fast a system responds to user requests."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Metrics"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Response time"}),"\n",(0,t.jsx)(n.li,{children:"Throughput"}),"\n",(0,t.jsx)(n.li,{children:"Latency"}),"\n",(0,t.jsx)(n.li,{children:"Bandwidth utilization"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"frontend-architecture",children:"Frontend Architecture"}),"\n",(0,t.jsx)(n.h3,{id:"modern-frontend-architecture",children:"Modern Frontend Architecture"}),"\n",(0,t.jsx)(n.h4,{id:"1-micro-frontends",children:"1. Micro-Frontends"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Architectural pattern where frontend applications are composed of independent, deployable micro-applications."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Independent development and deployment"}),"\n",(0,t.jsx)(n.li,{children:"Technology diversity"}),"\n",(0,t.jsx)(n.li,{children:"Team autonomy"}),"\n",(0,t.jsx)(n.li,{children:"Scalable development"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Module Federation (Webpack 5)\nconst ModuleFederationPlugin = require("webpack/lib/container/ModuleFederationPlugin");\n\nmodule.exports = {\n  plugins: [\n    new ModuleFederationPlugin({\n      name: "host",\n      remotes: {\n        app1: "app1@http://localhost:3001/remoteEntry.js",\n        app2: "app2@http://localhost:3002/remoteEntry.js",\n      },\n    }),\n  ],\n};\n'})}),"\n",(0,t.jsx)(n.h4,{id:"2-monorepo-architecture",children:"2. Monorepo Architecture"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Single repository containing multiple related projects."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Benefits"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Shared tooling and dependencies"}),"\n",(0,t.jsx)(n.li,{children:"Atomic commits across projects"}),"\n",(0,t.jsx)(n.li,{children:"Easier refactoring"}),"\n",(0,t.jsx)(n.li,{children:"Consistent development experience"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Tools"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Lerna"}),"\n",(0,t.jsx)(n.li,{children:"Nx"}),"\n",(0,t.jsx)(n.li,{children:"Yarn Workspaces"}),"\n",(0,t.jsx)(n.li,{children:"Rush"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"3-component-driven-architecture",children:"3. Component-Driven Architecture"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Building applications from reusable, composable components."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Principles"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Single responsibility"}),"\n",(0,t.jsx)(n.li,{children:"Composition over inheritance"}),"\n",(0,t.jsx)(n.li,{children:"Props down, events up"}),"\n",(0,t.jsx)(n.li,{children:"Controlled vs uncontrolled components"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"application-architecture-patterns",children:"Application Architecture Patterns"}),"\n",(0,t.jsx)(n.h4,{id:"1-layered-architecture",children:"1. Layered Architecture"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Organizing code into distinct layers with specific responsibilities."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Layers"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Presentation Layer"}),": UI components, routing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Business Logic Layer"}),": Services, utilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Access Layer"}),": API calls, state management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Infrastructure Layer"}),": Configuration, logging"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"2-feature-based-architecture",children:"2. Feature-Based Architecture"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Organizing code by features rather than technical concerns."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Structure"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 features/\n\u2502   \u251c\u2500\u2500 auth/\n\u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u251c\u2500\u2500 hooks/\n\u2502   \u2502   \u2514\u2500\u2500 types/\n\u2502   \u251c\u2500\u2500 dashboard/\n\u2502   \u2514\u2500\u2500 settings/\n\u251c\u2500\u2500 shared/\n\u2502   \u251c\u2500\u2500 components/\n\u2502   \u251c\u2500\u2500 utilities/\n\u2502   \u2514\u2500\u2500 types/\n\u2514\u2500\u2500 app/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"component-design",children:"Component Design"}),"\n",(0,t.jsx)(n.h3,{id:"component-design-principles",children:"Component Design Principles"}),"\n",(0,t.jsx)(n.h4,{id:"1-single-responsibility-principle",children:"1. Single Responsibility Principle"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Each component should have one reason to change."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Good: Single responsibility\nconst UserAvatar = ({ user, size }) => (\n  <img\n    src={user.avatar}\n    alt={user.name}\n    style={{ width: size, height: size }}\n  />\n);\n\nconst UserInfo = ({ user }) => (\n  <div>\n    <h3>{user.name}</h3>\n    <p>{user.email}</p>\n  </div>\n);\n\n// Bad: Multiple responsibilities\nconst UserCard = ({ user }) => (\n  <div>\n    <img src={user.avatar} alt={user.name} />\n    <h3>{user.name}</h3>\n    <p>{user.email}</p>\n    <button onClick={() => editUser(user.id)}>Edit</button>\n    <button onClick={() => deleteUser(user.id)}>Delete</button>\n  </div>\n);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-composition-pattern",children:"2. Composition Pattern"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Building complex components from simpler ones."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const Card = ({ children, ...props }) => (\n  <div className="card" {...props}>\n    {children}\n  </div>\n);\n\nconst CardHeader = ({ children }) => (\n  <div className="card-header">{children}</div>\n);\n\nconst CardBody = ({ children }) => <div className="card-body">{children}</div>;\n\n// Usage\n<Card>\n  <CardHeader>Title</CardHeader>\n  <CardBody>Content</CardBody>\n</Card>;\n'})}),"\n",(0,t.jsx)(n.h4,{id:"3-render-props-pattern",children:"3. Render Props Pattern"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Passing a function as a prop to control rendering."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const DataFetcher = ({ url, children }) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then(setData)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [url]);\n\n  return children({ data, loading, error });\n};\n\n// Usage\n<DataFetcher url="/api/users">\n  {({ data, loading, error }) => {\n    if (loading) return <Spinner />;\n    if (error) return <ErrorMessage error={error} />;\n    return <UserList users={data} />;\n  }}\n</DataFetcher>;\n'})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-component-patterns",children:"Advanced Component Patterns"}),"\n",(0,t.jsx)(n.h4,{id:"1-higher-order-components-hoc",children:"1. Higher-Order Components (HOC)"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Function that takes a component and returns a new component with additional props."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const withLoading = (WrappedComponent) => {\n  return function WithLoadingComponent(props) {\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n      // Fetch data logic\n      setLoading(false);\n    }, []);\n\n    if (loading) return <Spinner />;\n    return <WrappedComponent {...props} data={data} />;\n  };\n};\n\nconst UserList = withLoading(({ data }) => (\n  <div>\n    {data.map((user) => (\n      <User key={user.id} user={user} />\n    ))}\n  </div>\n));\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-custom-hooks",children:"2. Custom Hooks"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Reusable logic extracted into custom functions."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const useLocalStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n// Usage\nconst [theme, setTheme] = useLocalStorage("theme", "light");\n'})}),"\n",(0,t.jsx)(n.h2,{id:"state-management",children:"State Management"}),"\n",(0,t.jsx)(n.h3,{id:"state-management-patterns",children:"State Management Patterns"}),"\n",(0,t.jsx)(n.h4,{id:"1-local-state",children:"1. Local State"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": State managed within a component using useState."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const Counter = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n};\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-global-state",children:"2. Global State"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": State shared across multiple components."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Redux Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Store\nconst store = createStore(counterReducer);\n\n// Reducer\nconst counterReducer = (state = { count: 0 }, action) => {\n  switch (action.type) {\n    case "INCREMENT":\n      return { ...state, count: state.count + 1 };\n    case "DECREMENT":\n      return { ...state, count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\n// Component\nconst Counter = () => {\n  const count = useSelector((state) => state.count);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => dispatch({ type: "INCREMENT" })}>Increment</button>\n    </div>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h4,{id:"3-server-state",children:"3. Server State"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": State that comes from external APIs."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"React Query Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const useUsers = () => {\n  return useQuery("users", async () => {\n    const response = await fetch("/api/users");\n    return response.json();\n  });\n};\n\nconst UserList = () => {\n  const { data: users, isLoading, error } = useUsers();\n\n  if (isLoading) return <Spinner />;\n  if (error) return <ErrorMessage error={error} />;\n\n  return (\n    <div>\n      {users.map((user) => (\n        <User key={user.id} user={user} />\n      ))}\n    </div>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-interview-questions",children:"Common Interview Questions"}),"\n",(0,t.jsx)(n.h3,{id:"q1-design-a-scalable-frontend-architecture-for-a-large-application",children:"Q1: Design a scalable frontend architecture for a large application"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Answer"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Micro-Frontends"}),": Split into independent applications"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monorepo"}),": Shared tooling and dependencies"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component Library"}),": Reusable UI components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Management"}),": Centralized state with Redux/Zustand"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Layer"}),": Centralized API management"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Build System"}),": Module federation for code sharing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing Strategy"}),": Unit, integration, and E2E tests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": Code splitting, lazy loading, caching"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"q2-how-would-you-design-a-component-library",children:"Q2: How would you design a component library?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Answer"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Design System"}),": Consistent design tokens and patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component Structure"}),": Atomic design principles"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Design"}),": Consistent props and interfaces"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Documentation"}),": Storybook for component documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing"}),": Comprehensive test coverage"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Versioning"}),": Semantic versioning for releases"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Distribution"}),": NPM package with tree-shaking support"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Accessibility"}),": WCAG compliance and keyboard navigation"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"q3-explain-the-difference-between-redux-and-context-api",children:"Q3: Explain the difference between Redux and Context API"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Answer"}),":\n",(0,t.jsx)(n.strong,{children:"Redux"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Predictable state container"}),"\n",(0,t.jsx)(n.li,{children:"DevTools for debugging"}),"\n",(0,t.jsx)(n.li,{children:"Middleware support"}),"\n",(0,t.jsx)(n.li,{children:"Large ecosystem"}),"\n",(0,t.jsx)(n.li,{children:"More boilerplate code"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Context API"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Built into React"}),"\n",(0,t.jsx)(n.li,{children:"Simpler setup"}),"\n",(0,t.jsx)(n.li,{children:"No external dependencies"}),"\n",(0,t.jsx)(n.li,{children:"Less boilerplate"}),"\n",(0,t.jsx)(n.li,{children:"Limited debugging tools"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"q4-how-would-you-optimize-a-slow-react-application",children:"Q4: How would you optimize a slow React application?"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Answer"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Code Splitting"}),": Lazy loading components and routes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memoization"}),": React.memo, useMemo, useCallback"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Virtual Scrolling"}),": For large lists"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Bundle Analysis"}),": Identify large dependencies"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tree Shaking"}),": Remove unused code"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Monitoring"}),": Profiling with DevTools"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Optimization"}),": Minimize re-renders"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Image Optimization"}),": Lazy loading and compression"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"q5-design-a-real-time-chat-application",children:"Q5: Design a real-time chat application"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Answer"}),":\n",(0,t.jsx)(n.strong,{children:"Architecture"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Frontend"}),": React with WebSocket connection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Management"}),": Redux for chat state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Real-time"}),": WebSocket for instant messaging"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Offline Support"}),": Service worker for caching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Notifications"}),": Push notifications for new messages"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Sharing"}),": Upload and download capabilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Search"}),": Full-text search with debouncing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security"}),": End-to-end encryption"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Component Structure"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"ChatApp/\n\u251c\u2500\u2500 ChatList/\n\u251c\u2500\u2500 ChatRoom/\n\u2502   \u251c\u2500\u2500 MessageList/\n\u2502   \u251c\u2500\u2500 MessageInput/\n\u2502   \u2514\u2500\u2500 FileUpload/\n\u251c\u2500\u2500 UserList/\n\u2514\u2500\u2500 NotificationCenter/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"design-patterns",children:"Design Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"frontend-design-patterns",children:"Frontend Design Patterns"}),"\n",(0,t.jsx)(n.h4,{id:"1-observer-pattern",children:"1. Observer Pattern"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Objects subscribe to events and get notified when events occur."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n\n  on(event, callback) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(callback);\n  }\n\n  emit(event, data) {\n    if (this.events[event]) {\n      this.events[event].forEach((callback) => callback(data));\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"2-factory-pattern",children:"2. Factory Pattern"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Creating objects without specifying their exact class."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const createButton = (type, text) => {\n  switch (type) {\n    case "primary":\n      return <button className="btn-primary">{text}</button>;\n    case "secondary":\n      return <button className="btn-secondary">{text}</button>;\n    default:\n      return <button>{text}</button>;\n  }\n};\n'})}),"\n",(0,t.jsx)(n.h4,{id:"3-strategy-pattern",children:"3. Strategy Pattern"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Defining a family of algorithms and making them interchangeable."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'const sortingStrategies = {\n  bubble: (arr) => arr.sort((a, b) => a - b),\n  quick: (arr) => arr.sort((a, b) => a - b),\n  merge: (arr) => arr.sort((a, b) => a - b),\n};\n\nconst Sorter = ({ strategy, data }) => {\n  const sortedData = sortingStrategies[strategy](data);\n  return <div>{sortedData.join(", ")}</div>;\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"scalability",children:"Scalability"}),"\n",(0,t.jsx)(n.h3,{id:"scaling-frontend-applications",children:"Scaling Frontend Applications"}),"\n",(0,t.jsx)(n.h4,{id:"1-code-splitting",children:"1. Code Splitting"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Splitting code into smaller chunks loaded on demand."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Route-based splitting\nconst HomePage = lazy(() => import("./pages/HomePage"));\nconst AboutPage = lazy(() => import("./pages/AboutPage"));\n\n// Component-based splitting\nconst HeavyComponent = lazy(() => import("./components/HeavyComponent"));\n'})}),"\n",(0,t.jsx)(n.h4,{id:"2-caching-strategies",children:"2. Caching Strategies"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Storing frequently accessed data to improve performance."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Types"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Browser Cache"}),": HTTP cache headers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Application Cache"}),": In-memory caching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CDN Cache"}),": Distributed caching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Service Worker Cache"}),": Offline caching"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"3-load-balancing",children:"3. Load Balancing"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Distributing traffic across multiple servers."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Frontend Considerations"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"CDN for static assets"}),"\n",(0,t.jsx)(n.li,{children:"Multiple API endpoints"}),"\n",(0,t.jsx)(n.li,{children:"Geographic distribution"}),"\n",(0,t.jsx)(n.li,{children:"Health checks and failover"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"practice-problems",children:"Practice Problems"}),"\n",(0,t.jsx)(n.h3,{id:"problem-1-design-a-social-media-feed",children:"Problem 1: Design a Social Media Feed"}),"\n",(0,t.jsx)(n.p,{children:"Design a scalable social media feed with infinite scrolling, real-time updates, and content filtering."}),"\n",(0,t.jsx)(n.h3,{id:"problem-2-build-a-component-library",children:"Problem 2: Build a Component Library"}),"\n",(0,t.jsx)(n.p,{children:"Create a comprehensive component library with documentation, testing, and distribution strategy."}),"\n",(0,t.jsx)(n.h3,{id:"problem-3-design-a-real-time-dashboard",children:"Problem 3: Design a Real-time Dashboard"}),"\n",(0,t.jsx)(n.p,{children:"Build a real-time dashboard with multiple data sources, charts, and user customization."}),"\n",(0,t.jsx)(n.h3,{id:"problem-4-implement-micro-frontends",children:"Problem 4: Implement Micro-Frontends"}),"\n",(0,t.jsx)(n.p,{children:"Design and implement a micro-frontend architecture for an e-commerce platform."}),"\n",(0,t.jsx)(n.h3,{id:"problem-5-create-a-state-management-solution",children:"Problem 5: Create a State Management Solution"}),"\n",(0,t.jsx)(n.p,{children:"Build a custom state management library with middleware support and DevTools integration."}),"\n",(0,t.jsx)(n.h3,{id:"problem-6-design-a-file-upload-system",children:"Problem 6: Design a File Upload System"}),"\n",(0,t.jsx)(n.p,{children:"Create a file upload system with progress tracking, chunked uploads, and resume capability."}),"\n",(0,t.jsx)(n.h3,{id:"problem-7-build-a-search-interface",children:"Problem 7: Build a Search Interface"}),"\n",(0,t.jsx)(n.p,{children:"Implement a search interface with autocomplete, filters, and result highlighting."}),"\n",(0,t.jsx)(n.h3,{id:"problem-8-design-a-notification-system",children:"Problem 8: Design a Notification System"}),"\n",(0,t.jsx)(n.p,{children:"Create a notification system with real-time updates, user preferences, and cross-platform support."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"This guide covers essential system design concepts for frontend interviews at companies companies. Focus on understanding scalable architectures, component design patterns, and practical implementation strategies."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var r=i(6540);const t={},s=r.createContext(t);function l(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);