"use strict";(self.webpackChunkfrontend_interview_guide=self.webpackChunkfrontend_interview_guide||[]).push([[7280],{6118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"frontend/architecture/frontend-system-design-framework","title":"Frontend System Design Framework","description":"Table of Contents","source":"@site/docs/frontend/architecture/frontend-system-design-framework.md","sourceDirName":"frontend/architecture","slug":"/frontend/architecture/frontend-system-design-framework","permalink":"/interview/docs/frontend/architecture/frontend-system-design-framework","draft":false,"unlisted":false,"editUrl":"https://github.com/Nhi4912/interview/tree/main/docs/frontend/architecture/frontend-system-design-framework.md","tags":[],"version":"current","frontMatter":{}}');var r=t(4848),i=t(8453);const o={},a="Frontend System Design Framework",l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"System Design Interview Approach",id:"system-design-interview-approach",level:2},{value:"The 6-Step Framework",id:"the-6-step-framework",level:3},{value:"Communication Strategy During Design",id:"communication-strategy-during-design",level:3},{value:"Requirements Gathering Framework",id:"requirements-gathering-framework",level:2},{value:"Functional Requirements Analysis",id:"functional-requirements-analysis",level:3},{value:"Non-Functional Requirements",id:"non-functional-requirements",level:3},{value:"Example: Social Media Feed Requirements",id:"example-social-media-feed-requirements",level:3},{value:"Architecture Patterns",id:"architecture-patterns",level:2},{value:"Layered Architecture Pattern",id:"layered-architecture-pattern",level:3},{value:"Micro-Frontend Architecture",id:"micro-frontend-architecture",level:3},{value:"Component-Based Architecture",id:"component-based-architecture",level:3},{value:"Component Design Strategy",id:"component-design-strategy",level:2},{value:"Component Hierarchy Design",id:"component-hierarchy-design",level:3},{value:"Component Patterns",id:"component-patterns",level:3},{value:"State Management Architecture",id:"state-management-architecture",level:2},{value:"State Architecture Patterns",id:"state-architecture-patterns",level:3},{value:"Data Flow Patterns",id:"data-flow-patterns",level:3},{value:"Performance &amp; Scalability",id:"performance--scalability",level:2},{value:"Loading Strategies",id:"loading-strategies",level:3},{value:"Caching Strategies",id:"caching-strategies",level:3},{value:"Real-World Examples",id:"real-world-examples",level:2},{value:"Example 1: Twitter-like Feed",id:"example-1-twitter-like-feed",level:3},{value:"Example 2: Google Docs-like Editor",id:"example-2-google-docs-like-editor",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"frontend-system-design-framework",children:"Frontend System Design Framework"})}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#system-design-interview-approach",children:"System Design Interview Approach"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#requirements-gathering-framework",children:"Requirements Gathering Framework"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#architecture-patterns",children:"Architecture Patterns"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#component-design-strategy",children:"Component Design Strategy"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#state-management-architecture",children:"State Management Architecture"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#performance--scalability",children:"Performance & Scalability"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#real-world-examples",children:"Real-World Examples"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#visual-design-patterns",children:"Visual Design Patterns"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#evaluation-criteria",children:"Evaluation Criteria"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"system-design-interview-approach",children:"System Design Interview Approach"}),"\n",(0,r.jsx)(n.h3,{id:"the-6-step-framework",children:"The 6-Step Framework"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 1: Clarify Requirements (5 minutes)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Functional requirements"}),"\n",(0,r.jsx)(n.li,{children:"Non-functional requirements"}),"\n",(0,r.jsx)(n.li,{children:"Scale and constraints"}),"\n",(0,r.jsx)(n.li,{children:"User personas"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 2: High-Level Architecture (10 minutes)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"System components"}),"\n",(0,r.jsx)(n.li,{children:"Data flow"}),"\n",(0,r.jsx)(n.li,{children:"Technology stack"}),"\n",(0,r.jsx)(n.li,{children:"Third-party integrations"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 3: Component Design (15 minutes)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Component hierarchy"}),"\n",(0,r.jsx)(n.li,{children:"Props and state design"}),"\n",(0,r.jsx)(n.li,{children:"Reusability patterns"}),"\n",(0,r.jsx)(n.li,{children:"Component communication"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 4: State Management (10 minutes)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"State architecture"}),"\n",(0,r.jsx)(n.li,{children:"Data flow patterns"}),"\n",(0,r.jsx)(n.li,{children:"Caching strategies"}),"\n",(0,r.jsx)(n.li,{children:"Real-time updates"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 5: Performance & Scalability (10 minutes)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Loading strategies"}),"\n",(0,r.jsx)(n.li,{children:"Bundle optimization"}),"\n",(0,r.jsx)(n.li,{children:"Caching approaches"}),"\n",(0,r.jsx)(n.li,{children:"Monitoring and metrics"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Step 6: Deep Dive & Trade-offs (10 minutes)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Specific implementation details"}),"\n",(0,r.jsx)(n.li,{children:"Alternative approaches"}),"\n",(0,r.jsx)(n.li,{children:"Trade-off analysis"}),"\n",(0,r.jsx)(n.li,{children:"Future considerations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"communication-strategy-during-design",children:"Communication Strategy During Design"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Think Aloud Process:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"Let me start by understanding the requirements..."\n"I\'m thinking about the user journey here..."\n"There are a few architectural options - let me explore them..."\n"The trade-off I see here is..."\n"If I had more time, I would also consider..."\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Visual Communication:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                Design Process                       \u2502\n\u2502                                                     \u2502\n\u2502  Requirements \u2192 Architecture \u2192 Components           \u2502\n\u2502       \u2193              \u2193              \u2193              \u2502\n\u2502   Clarify      High-level     Component             \u2502\n\u2502   Scope        Design         Details               \u2502\n\u2502                                                     \u2502\n\u2502  \u2190\u2500\u2500 Iterate and Refine Throughout \u2500\u2500\u2500\u2192            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h2,{id:"requirements-gathering-framework",children:"Requirements Gathering Framework"}),"\n",(0,r.jsx)(n.h3,{id:"functional-requirements-analysis",children:"Functional Requirements Analysis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Template Questions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"User Experience:\n- Who are the primary users?\n- What are the core user flows?\n- What platforms (desktop, mobile, tablet)?\n- What browsers need to be supported?\n\nFeatures:\n- What are the must-have features?\n- What are the nice-to-have features?\n- Are there any complex interactions?\n- What about accessibility requirements?\n\nData:\n- What data needs to be displayed?\n- Where does the data come from?\n- How often does data change?\n- What's the data volume and structure?\n\nIntegration:\n- Are there existing systems to integrate with?\n- What APIs are available?\n- Are there authentication requirements?\n- What about third-party services?\n"})}),"\n",(0,r.jsx)(n.h3,{id:"non-functional-requirements",children:"Non-Functional Requirements"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance Requirements:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Loading Performance:\n- Initial page load time target?\n- Time to interactive requirements?\n- Core Web Vitals goals?\n\nRuntime Performance:\n- Expected concurrent users?\n- Response time requirements?\n- Animation smoothness needs?\n\nScalability:\n- Expected growth rate?\n- Peak usage scenarios?\n- Geographic distribution?\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Quality Requirements:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Reliability:\n- Uptime requirements?\n- Error handling expectations?\n- Offline functionality needs?\n\nSecurity:\n- Authentication/authorization needs?\n- Data protection requirements?\n- Compliance considerations?\n\nMaintainability:\n- Team size and skill level?\n- Development timeline?\n- Long-term maintenance plans?\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-social-media-feed-requirements",children:"Example: Social Media Feed Requirements"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Question:"}),' "Design a social media feed like Twitter"']}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Requirements Gathering:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Functional Requirements:\n\u2713 Display posts in chronological order\n\u2713 Real-time updates for new posts\n\u2713 Like, comment, and share functionality\n\u2713 User profiles and following/followers\n\u2713 Image and video support\n\u2713 Search functionality\n\u2713 Trending topics\n\nNon-Functional Requirements:\n\u2713 Support 1M+ concurrent users\n\u2713 Sub-second response times\n\u2713 99.9% uptime\n\u2713 Mobile-first responsive design\n\u2713 Accessibility compliance (WCAG 2.1)\n\u2713 Real-time updates with WebSocket\n\u2713 Offline reading capability\n\nConstraints:\n\u2713 Browser support: Chrome, Firefox, Safari (latest 2 versions)\n\u2713 Bundle size limit: 2MB initial\n\u2713 API rate limits: 1000 requests/hour per user\n\u2713 Content moderation requirements\n"})}),"\n",(0,r.jsx)(n.h2,{id:"architecture-patterns",children:"Architecture Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"layered-architecture-pattern",children:"Layered Architecture Pattern"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                Presentation Layer                   \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502   React     \u2502 \u2502   Vue.js    \u2502 \u2502   Angular   \u2502   \u2502\n\u2502  \u2502 Components  \u2502 \u2502 Components  \u2502 \u2502 Components  \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                Business Logic Layer                 \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502   Custom    \u2502 \u2502   Hooks     \u2502 \u2502  Services   \u2502   \u2502\n\u2502  \u2502   Hooks     \u2502 \u2502  & Utils    \u2502 \u2502  & Utils    \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                 Data Access Layer                   \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502     API     \u2502 \u2502   Cache     \u2502 \u2502   State     \u2502   \u2502\n\u2502  \u2502   Client    \u2502 \u2502 Management  \u2502 \u2502 Management  \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502               Infrastructure Layer                  \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502   CDN &     \u2502 \u2502   Service   \u2502 \u2502   Error     \u2502   \u2502\n\u2502  \u2502   Static    \u2502 \u2502   Worker    \u2502 \u2502 Monitoring  \u2502   \u2502\n\u2502  \u2502   Assets    \u2502 \u2502             \u2502 \u2502             \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Clear separation of concerns"}),"\n",(0,r.jsx)(n.li,{children:"Easier testing and maintenance"}),"\n",(0,r.jsx)(n.li,{children:"Scalable team structure"}),"\n",(0,r.jsx)(n.li,{children:"Technology flexibility"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Implementation Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Presentation Layer\ninterface PostComponentProps {\n  post: Post;\n  onLike: (postId: string) => void;\n  onComment: (postId: string, comment: string) => void;\n}\n\nconst PostComponent: React.FC<PostComponentProps> = ({ post, onLike, onComment }) => {\n  return (\n    <article className=\"post\">\n      <PostHeader author={post.author} timestamp={post.createdAt} />\n      <PostContent content={post.content} media={post.media} />\n      <PostActions \n        likes={post.likes}\n        onLike={() => onLike(post.id)}\n        onComment={(comment) => onComment(post.id, comment)}\n      />\n    </article>\n  );\n};\n\n// Business Logic Layer\nconst usePostInteractions = () => {\n  const likePost = useCallback(async (postId: string) => {\n    try {\n      await PostService.likePost(postId);\n      // Update local state\n    } catch (error) {\n      // Handle error\n    }\n  }, []);\n\n  const addComment = useCallback(async (postId: string, comment: string) => {\n    try {\n      await PostService.addComment(postId, comment);\n      // Update local state\n    } catch (error) {\n      // Handle error\n    }\n  }, []);\n\n  return { likePost, addComment };\n};\n\n// Data Access Layer\nclass PostService {\n  static async likePost(postId: string): Promise<void> {\n    const response = await apiClient.post(`/posts/${postId}/like`);\n    if (!response.ok) throw new Error('Failed to like post');\n  }\n\n  static async addComment(postId: string, comment: string): Promise<Comment> {\n    const response = await apiClient.post(`/posts/${postId}/comments`, { comment });\n    if (!response.ok) throw new Error('Failed to add comment');\n    return response.json();\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"micro-frontend-architecture",children:"Micro-Frontend Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                Shell Application                    \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502            Shared Components                \u2502   \u2502\n\u2502  \u2502     Header, Footer, Navigation              \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502               Micro-Frontend Apps                   \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502    Feed     \u2502 \u2502   Profile   \u2502 \u2502  Messaging  \u2502   \u2502\n\u2502  \u2502   Module    \u2502 \u2502   Module    \u2502 \u2502   Module    \u2502   \u2502\n\u2502  \u2502             \u2502 \u2502             \u2502 \u2502             \u2502   \u2502\n\u2502  \u2502 React 18    \u2502 \u2502   Vue 3     \u2502 \u2502 Angular 15  \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502              Shared Infrastructure                  \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502   State     \u2502 \u2502   Event     \u2502 \u2502    API      \u2502   \u2502\n\u2502  \u2502  Manager    \u2502 \u2502    Bus      \u2502 \u2502   Gateway   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Team autonomy"}),"\n",(0,r.jsx)(n.li,{children:"Technology diversity"}),"\n",(0,r.jsx)(n.li,{children:"Independent deployment"}),"\n",(0,r.jsx)(n.li,{children:"Scalable development"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Challenges:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Complexity overhead"}),"\n",(0,r.jsx)(n.li,{children:"Bundle duplication"}),"\n",(0,r.jsx)(n.li,{children:"Cross-module communication"}),"\n",(0,r.jsx)(n.li,{children:"Consistent UX"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"component-based-architecture",children:"Component-Based Architecture"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Application\n\u251c\u2500\u2500 Layout Components\n\u2502   \u251c\u2500\u2500 Header\n\u2502   \u251c\u2500\u2500 Sidebar\n\u2502   \u251c\u2500\u2500 Main Content\n\u2502   \u2514\u2500\u2500 Footer\n\u251c\u2500\u2500 Feature Components\n\u2502   \u251c\u2500\u2500 User Profile\n\u2502   \u251c\u2500\u2500 Post Feed\n\u2502   \u251c\u2500\u2500 Search\n\u2502   \u2514\u2500\u2500 Notifications\n\u251c\u2500\u2500 UI Components\n\u2502   \u251c\u2500\u2500 Button\n\u2502   \u251c\u2500\u2500 Input\n\u2502   \u251c\u2500\u2500 Modal\n\u2502   \u2514\u2500\u2500 Card\n\u2514\u2500\u2500 Utility Components\n    \u251c\u2500\u2500 Error Boundary\n    \u251c\u2500\u2500 Loading Spinner\n    \u251c\u2500\u2500 Infinite Scroll\n    \u2514\u2500\u2500 Virtual List\n"})}),"\n",(0,r.jsx)(n.h2,{id:"component-design-strategy",children:"Component Design Strategy"}),"\n",(0,r.jsx)(n.h3,{id:"component-hierarchy-design",children:"Component Hierarchy Design"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Design Principles:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Single Responsibility"}),": Each component has one clear purpose"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Composition over Inheritance"}),": Build complex UI through composition"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Props Down, Events Up"}),": Unidirectional data flow"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reusability"}),": Design for multiple use cases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testability"}),": Components should be easily testable"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example: Social Feed Component Design"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// High-level container component\ninterface FeedContainerProps {\n  userId?: string;\n  feedType: 'home' | 'user' | 'trending';\n}\n\nconst FeedContainer: React.FC<FeedContainerProps> = ({ userId, feedType }) => {\n  const { posts, loading, error, loadMore, hasMore } = useFeed(feedType, userId);\n  \n  return (\n    <div className=\"feed-container\">\n      <FeedHeader feedType={feedType} />\n      <PostCreator onPostCreate={handlePostCreate} />\n      <PostList \n        posts={posts} \n        loading={loading}\n        error={error}\n        onLoadMore={loadMore}\n        hasMore={hasMore}\n      />\n    </div>\n  );\n};\n\n// Post list with virtualization\ninterface PostListProps {\n  posts: Post[];\n  loading: boolean;\n  error: string | null;\n  onLoadMore: () => void;\n  hasMore: boolean;\n}\n\nconst PostList: React.FC<PostListProps> = ({ \n  posts, \n  loading, \n  error, \n  onLoadMore, \n  hasMore \n}) => {\n  const { containerRef, visibleItems } = useVirtualization(posts, POST_HEIGHT);\n  \n  return (\n    <div ref={containerRef} className=\"post-list\">\n      <InfiniteScroll onLoadMore={onLoadMore} hasMore={hasMore}>\n        {visibleItems.map(({ item: post, index }) => (\n          <PostCard \n            key={post.id} \n            post={post} \n            style={{ \n              position: 'absolute',\n              top: index * POST_HEIGHT,\n              height: POST_HEIGHT\n            }}\n          />\n        ))}\n      </InfiniteScroll>\n      {loading && <LoadingSpinner />}\n      {error && <ErrorMessage message={error} />}\n    </div>\n  );\n};\n\n// Individual post component\ninterface PostCardProps {\n  post: Post;\n  style?: React.CSSProperties;\n}\n\nconst PostCard: React.FC<PostCardProps> = ({ post, style }) => {\n  const { likePost, sharePost, reportPost } = usePostActions();\n  \n  return (\n    <article className=\"post-card\" style={style}>\n      <PostHeader \n        author={post.author} \n        timestamp={post.createdAt}\n        onReport={() => reportPost(post.id)}\n      />\n      <PostContent \n        content={post.content} \n        media={post.media}\n        hashtags={post.hashtags}\n      />\n      <PostActions \n        post={post}\n        onLike={() => likePost(post.id)}\n        onShare={() => sharePost(post.id)}\n      />\n      <CommentSection postId={post.id} />\n    </article>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"component-patterns",children:"Component Patterns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Container/Presentational Pattern"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// Container (Smart Component)\nconst PostContainerComponent = ({ postId }: { postId: string }) => {\n  const { post, loading, error } = usePost(postId);\n  const { likePost, sharePost } = usePostActions();\n  \n  if (loading) return <LoadingSpinner />;\n  if (error) return <ErrorMessage error={error} />;\n  if (!post) return <NotFound />;\n  \n  return (\n    <PostPresentational \n      post={post}\n      onLike={() => likePost(postId)}\n      onShare={() => sharePost(postId)}\n    />\n  );\n};\n\n// Presentational (Dumb Component)\ninterface PostPresentationalProps {\n  post: Post;\n  onLike: () => void;\n  onShare: () => void;\n}\n\nconst PostPresentational: React.FC<PostPresentationalProps> = ({\n  post,\n  onLike,\n  onShare\n}) => (\n  <div className="post">\n    <h2>{post.title}</h2>\n    <p>{post.content}</p>\n    <button onClick={onLike}>Like ({post.likes})</button>\n    <button onClick={onShare}>Share</button>\n  </div>\n);\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Compound Components Pattern"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// API Design\n<Tabs defaultActiveKey="tab1">\n  <Tabs.TabList>\n    <Tabs.Tab key="tab1">Tab 1</Tabs.Tab>\n    <Tabs.Tab key="tab2">Tab 2</Tabs.Tab>\n  </Tabs.TabList>\n  <Tabs.TabPanels>\n    <Tabs.TabPanel key="tab1">Panel 1 Content</Tabs.TabPanel>\n    <Tabs.TabPanel key="tab2">Panel 2 Content</Tabs.TabPanel>\n  </Tabs.TabPanels>\n</Tabs>\n\n// Implementation\nconst TabsContext = React.createContext<{\n  activeKey: string;\n  setActiveKey: (key: string) => void;\n} | null>(null);\n\nconst Tabs: React.FC<TabsProps> & {\n  TabList: typeof TabList;\n  Tab: typeof Tab;\n  TabPanels: typeof TabPanels;\n  TabPanel: typeof TabPanel;\n} = ({ children, defaultActiveKey }) => {\n  const [activeKey, setActiveKey] = useState(defaultActiveKey);\n  \n  return (\n    <TabsContext.Provider value={{ activeKey, setActiveKey }}>\n      <div className="tabs">{children}</div>\n    </TabsContext.Provider>\n  );\n};\n\nTabs.TabList = TabList;\nTabs.Tab = Tab;\nTabs.TabPanels = TabPanels;\nTabs.TabPanel = TabPanel;\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Render Props Pattern"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'interface DataFetcherProps<T> {\n  url: string;\n  children: (data: {\n    data: T | null;\n    loading: boolean;\n    error: string | null;\n    refetch: () => void;\n  }) => React.ReactNode;\n}\n\nconst DataFetcher = <T,>({ url, children }: DataFetcherProps<T>) => {\n  const { data, loading, error, refetch } = useApiData<T>(url);\n  \n  return <>{children({ data, loading, error, refetch })}</>;\n};\n\n// Usage\n<DataFetcher<User[]> url="/api/users">\n  {({ data: users, loading, error, refetch }) => (\n    <div>\n      {loading && <LoadingSpinner />}\n      {error && <ErrorMessage error={error} onRetry={refetch} />}\n      {users && <UserList users={users} />}\n    </div>\n  )}\n</DataFetcher>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"state-management-architecture",children:"State Management Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"state-architecture-patterns",children:"State Architecture Patterns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Local State Pattern"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// For simple, component-specific state\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n  const [step, setStep] = useState(1);\n  \n  return (\n    <div>\n      <span>Count: {count}</span>\n      <button onClick={() => setCount(count + step)}>\n        Increment by {step}\n      </button>\n      <input \n        type="number" \n        value={step} \n        onChange={(e) => setStep(parseInt(e.target.value))}\n      />\n    </div>\n  );\n};\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Lifted State Pattern"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// When multiple components need the same state\nconst ParentComponent = () => {\n  const [sharedData, setSharedData] = useState(initialData);\n  \n  return (\n    <div>\n      <ChildA data={sharedData} onUpdate={setSharedData} />\n      <ChildB data={sharedData} onUpdate={setSharedData} />\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Context State Pattern"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// For application-wide state\ninterface AppState {\n  user: User | null;\n  theme: 'light' | 'dark';\n  notifications: Notification[];\n}\n\nconst AppStateContext = createContext<{\n  state: AppState;\n  dispatch: Dispatch<AppAction>;\n} | null>(null);\n\nconst AppStateProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  \n  return (\n    <AppStateContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppStateContext.Provider>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. External State Management"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Using Zustand for global state\ninterface StoreState {\n  posts: Post[];\n  currentUser: User | null;\n  addPost: (post: Post) => void;\n  setUser: (user: User) => void;\n  likePost: (postId: string) => void;\n}\n\nconst useStore = create<StoreState>((set, get) => ({\n  posts: [],\n  currentUser: null,\n  \n  addPost: (post) => set((state) => ({ \n    posts: [post, ...state.posts] \n  })),\n  \n  setUser: (user) => set({ currentUser: user }),\n  \n  likePost: (postId) => set((state) => ({\n    posts: state.posts.map(post => \n      post.id === postId \n        ? { ...post, likes: post.likes + 1, likedByUser: true }\n        : post\n    )\n  }))\n}));\n"})}),"\n",(0,r.jsx)(n.h3,{id:"data-flow-patterns",children:"Data Flow Patterns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Unidirectional Data Flow:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                 Data Flow Pattern                   \u2502\n\u2502                                                     \u2502\n\u2502  User Action \u2192 Event Handler \u2192 State Update         \u2502\n\u2502       \u2193              \u2193              \u2193              \u2502\n\u2502   Component \u2192 Component Logic \u2192 Re-render           \u2502\n\u2502                                                     \u2502\n\u2502  \u2190\u2500\u2500 Props/State Flow (Downward) \u2500\u2500\u2500\u2500\u2500             \u2502\n\u2502  \u2500\u2500\u2500\u2500 Events/Callbacks (Upward) \u2500\u2500\u2500\u2500\u2192              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Implementation Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Parent manages state and provides actions\nconst FeedContainer = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(false);\n  \n  const addPost = useCallback((newPost: Post) => {\n    setPosts(current => [newPost, ...current]);\n  }, []);\n  \n  const likePost = useCallback((postId: string) => {\n    setPosts(current => \n      current.map(post => \n        post.id === postId \n          ? { ...post, likes: post.likes + 1 }\n          : post\n      )\n    );\n  }, []);\n  \n  return (\n    <div>\n      <PostCreator onSubmit={addPost} />\n      <PostList posts={posts} onLike={likePost} />\n    </div>\n  );\n};\n\n// Children receive data and callbacks\nconst PostList = ({ posts, onLike }) => (\n  <div>\n    {posts.map(post => (\n      <PostCard \n        key={post.id} \n        post={post} \n        onLike={() => onLike(post.id)} \n      />\n    ))}\n  </div>\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"performance--scalability",children:"Performance & Scalability"}),"\n",(0,r.jsx)(n.h3,{id:"loading-strategies",children:"Loading Strategies"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Progressive Loading"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Code splitting with lazy loading\nconst FeedPage = lazy(() => import('./pages/FeedPage'));\nconst ProfilePage = lazy(() => import('./pages/ProfilePage'));\nconst MessagesPage = lazy(() => import('./pages/MessagesPage'));\n\nconst App = () => (\n  <Router>\n    <Suspense fallback={<PageLoader />}>\n      <Routes>\n        <Route path=\"/feed\" element={<FeedPage />} />\n        <Route path=\"/profile\" element={<ProfilePage />} />\n        <Route path=\"/messages\" element={<MessagesPage />} />\n      </Routes>\n    </Suspense>\n  </Router>\n);\n\n// Component-level lazy loading\nconst HeavyComponent = lazy(() => \n  import('./HeavyComponent').then(module => ({\n    default: module.HeavyComponent\n  }))\n);\n\nconst ParentComponent = () => {\n  const [showHeavy, setShowHeavy] = useState(false);\n  \n  return (\n    <div>\n      <button onClick={() => setShowHeavy(true)}>\n        Load Heavy Component\n      </button>\n      {showHeavy && (\n        <Suspense fallback={<ComponentLoader />}>\n          <HeavyComponent />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Resource Prioritization"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Critical resource loading\nconst CriticalResourceLoader = () => {\n  useEffect(() => {\n    // Preload critical resources\n    const criticalResources = [\n      '/api/user/current',\n      '/api/feed/recent',\n      '/fonts/primary.woff2'\n    ];\n    \n    criticalResources.forEach(resource => {\n      if (resource.startsWith('/api/')) {\n        // Prefetch API data\n        fetch(resource).then(response => response.json());\n      } else {\n        // Preload static resources\n        const link = document.createElement('link');\n        link.rel = 'preload';\n        link.href = resource;\n        link.as = resource.includes('font') ? 'font' : 'fetch';\n        document.head.appendChild(link);\n      }\n    });\n  }, []);\n  \n  return null;\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Virtualization for Large Lists"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface VirtualListProps<T> {\n  items: T[];\n  itemHeight: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n}\n\nconst VirtualList = <T,>({ \n  items, \n  itemHeight, \n  containerHeight, \n  renderItem \n}: VirtualListProps<T>) => {\n  const [scrollTop, setScrollTop] = useState(0);\n  \n  const visibleStart = Math.floor(scrollTop / itemHeight);\n  const visibleEnd = Math.min(\n    visibleStart + Math.ceil(containerHeight / itemHeight) + 1,\n    items.length\n  );\n  \n  const visibleItems = items.slice(visibleStart, visibleEnd);\n  const totalHeight = items.length * itemHeight;\n  const offsetY = visibleStart * itemHeight;\n  \n  return (\n    <div \n      style={{ height: containerHeight, overflow: 'auto' }}\n      onScroll={(e) => setScrollTop(e.currentTarget.scrollTop)}\n    >\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div style={{ transform: `translateY(${offsetY}px)` }}>\n          {visibleItems.map((item, index) => (\n            <div key={visibleStart + index} style={{ height: itemHeight }}>\n              {renderItem(item, visibleStart + index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"caching-strategies",children:"Caching Strategies"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Browser Caching"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Service Worker caching strategy\nconst CACHE_NAME = 'social-feed-v1';\nconst CACHE_STRATEGIES = {\n  static: 'cache-first',    // CSS, JS, images\n  api: 'network-first',     // API calls\n  feed: 'stale-while-revalidate'  // Social feed data\n};\n\nself.addEventListener('fetch', (event) => {\n  const url = new URL(event.request.url);\n  \n  if (url.pathname.startsWith('/api/feed')) {\n    event.respondWith(staleWhileRevalidate(event.request));\n  } else if (url.pathname.startsWith('/api/')) {\n    event.respondWith(networkFirst(event.request));\n  } else if (url.pathname.match(/\\.(css|js|png|jpg)$/)) {\n    event.respondWith(cacheFirst(event.request));\n  }\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Memory Caching"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// React Query for API caching\nconst usePosts = (feedType: string) => {\n  return useQuery({\n    queryKey: ['posts', feedType],\n    queryFn: () => fetchPosts(feedType),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    cacheTime: 10 * 60 * 1000, // 10 minutes\n    refetchOnWindowFocus: false\n  });\n};\n\n// Custom hook with memory cache\nconst useMemoryCache = <T>(key: string, fetcher: () => Promise<T>) => {\n  const cache = useRef<Map<string, { data: T; timestamp: number }>>(new Map());\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n  \n  const getData = useCallback(async () => {\n    const cached = cache.current.get(key);\n    const now = Date.now();\n    \n    // Use cache if less than 5 minutes old\n    if (cached && (now - cached.timestamp) < 5 * 60 * 1000) {\n      setData(cached.data);\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      const result = await fetcher();\n      cache.current.set(key, { data: result, timestamp: now });\n      setData(result);\n    } finally {\n      setLoading(false);\n    }\n  }, [key, fetcher]);\n  \n  useEffect(() => {\n    getData();\n  }, [getData]);\n  \n  return { data, loading, refetch: getData };\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"real-world-examples",children:"Real-World Examples"}),"\n",(0,r.jsx)(n.h3,{id:"example-1-twitter-like-feed",children:"Example 1: Twitter-like Feed"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Real-time feed updates"}),"\n",(0,r.jsx)(n.li,{children:"Infinite scrolling"}),"\n",(0,r.jsx)(n.li,{children:"Media support (images, videos)"}),"\n",(0,r.jsx)(n.li,{children:"User interactions (like, retweet, reply)"}),"\n",(0,r.jsx)(n.li,{children:"10M+ daily active users"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"System Design:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                Frontend Architecture                \u2502\n\u2502                                                     \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502              Shell App                      \u2502   \u2502\n\u2502  \u2502   Navigation, Auth, Global State           \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2502                          \u2502                         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502               Feed Module                   \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502\n\u2502  \u2502  \u2502 Post List   \u2502 \u2502   Real-time         \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502 (Virtual)   \u2502 \u2502   Updates           \u2502   \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502   (WebSocket)       \u2502   \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n\u2502  \u2502  \u2502   Post      \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502\n\u2502  \u2502  \u2502 Composer    \u2502 \u2502   Media Upload      \u2502   \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502   (Progressive)     \u2502   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2502                          \u2502                         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502            State Management                 \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502\n\u2502  \u2502  \u2502   Posts     \u2502 \u2502     User Data       \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502   Cache     \u2502 \u2502     & Session       \u2502   \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Components:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Feed container with real-time updates\nconst FeedContainer = () => {\n  const { posts, loading, error } = useFeed();\n  const { socket } = useWebSocket();\n  \n  useEffect(() => {\n    socket.on('new_post', (post: Post) => {\n      // Add new post to feed\n      queryClient.setQueryData(['feed'], (old: Post[]) => [post, ...old]);\n    });\n    \n    socket.on('post_updated', (updatedPost: Post) => {\n      // Update existing post\n      queryClient.setQueryData(['feed'], (old: Post[]) => \n        old.map(post => post.id === updatedPost.id ? updatedPost : post)\n      );\n    });\n    \n    return () => {\n      socket.off('new_post');\n      socket.off('post_updated');\n    };\n  }, [socket, queryClient]);\n  \n  return (\n    <div className=\"feed-container\">\n      <PostComposer />\n      <VirtualizedFeed posts={posts} loading={loading} error={error} />\n    </div>\n  );\n};\n\n// Virtualized feed for performance\nconst VirtualizedFeed = ({ posts, loading, error }) => {\n  const { containerRef, visibleItems } = useVirtualization(posts, 200);\n  \n  return (\n    <div ref={containerRef} className=\"feed\">\n      {visibleItems.map(({ item: post, index }) => (\n        <PostCard \n          key={post.id} \n          post={post} \n          style={{ \n            position: 'absolute',\n            top: index * 200,\n            height: 200\n          }}\n        />\n      ))}\n      {loading && <FeedLoader />}\n      {error && <ErrorBoundary error={error} />}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-2-google-docs-like-editor",children:"Example 2: Google Docs-like Editor"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Real-time collaborative editing"}),"\n",(0,r.jsx)(n.li,{children:"Rich text formatting"}),"\n",(0,r.jsx)(n.li,{children:"Document structure (headings, lists, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Version history"}),"\n",(0,r.jsx)(n.li,{children:"Offline support"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"System Design:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502            Collaborative Editor Architecture        \u2502\n\u2502                                                     \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502              Editor Shell                   \u2502   \u2502\n\u2502  \u2502   Toolbar, Menu, Document Navigator        \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2502                          \u2502                         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502             Editor Core                     \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502\n\u2502  \u2502  \u2502   Content   \u2502 \u2502   Operational       \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502   Model     \u2502 \u2502   Transform         \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502 (ProseMirror\u2502 \u2502   (Conflict         \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502   Schema)   \u2502 \u2502   Resolution)       \u2502   \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502\n\u2502  \u2502  \u2502  Selection  \u2502 \u2502   Collaboration     \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502  & Cursor   \u2502 \u2502   Awareness         \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502  Management \u2502 \u2502   (Other Users)     \u2502   \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2502                          \u2502                         \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502           Real-time Sync                    \u2502   \u2502\n\u2502  \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502\n\u2502  \u2502  \u2502  WebSocket  \u2502 \u2502   Offline Queue     \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502 Connection  \u2502 \u2502   & Conflict        \u2502   \u2502   \u2502\n\u2502  \u2502  \u2502             \u2502 \u2502   Resolution        \u2502   \u2502   \u2502\n\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.p,{children:"This comprehensive framework provides the foundation for tackling any frontend system design interview, with practical examples and proven patterns that scale to real-world applications."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);