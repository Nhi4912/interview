"use strict";(self.webpackChunkfrontend_interview_guide=self.webpackChunkfrontend_interview_guide||[]).push([[1088],{1818:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>a});var i=r(4848),s=r(8453);const l={},t="Sorting & Searching Problems - LeetCode Collection",o={id:"leetcode/sorting-searching/README",title:"Sorting & Searching Problems - LeetCode Collection",description:"B\u1ed9 s\u01b0u t\u1eadp b\xe0i t\u1eadp Sorting & Searching t\u1eeb LeetCode cho ph\u1ecfng v\u1ea5n Big Tech",source:"@site/docs/leetcode/sorting-searching/README.md",sourceDirName:"leetcode/sorting-searching",slug:"/leetcode/sorting-searching/",permalink:"/interview/docs/leetcode/sorting-searching/",draft:!1,unlisted:!1,editUrl:"https://github.com/Nhi4912/interview/tree/main/docs/leetcode/sorting-searching/README.md",tags:[],version:"current",frontMatter:{},sidebar:"leetcodeSidebar",previous:{title:"Math Problems - LeetCode Collection",permalink:"/interview/docs/leetcode/math/"},next:{title:"Other Problems - LeetCode Collection",permalink:"/interview/docs/leetcode/others/"}},c={},a=[{value:"\ud83d\udccb Problem List / Danh s\xe1ch b\xe0i t\u1eadp",id:"-problem-list--danh-s\xe1ch-b\xe0i-t\u1eadp",level:2},{value:"Easy Level / M\u1ee9c \u0111\u1ed9 d\u1ec5",id:"easy-level--m\u1ee9c-\u0111\u1ed9-d\u1ec5",level:3},{value:"1. Merge Sorted Array",id:"1-merge-sorted-array",level:4},{value:"2. First Bad Version",id:"2-first-bad-version",level:4},{value:"Medium Level / M\u1ee9c \u0111\u1ed9 trung b\xecnh",id:"medium-level--m\u1ee9c-\u0111\u1ed9-trung-b\xecnh",level:3},{value:"3. Sort Colors",id:"3-sort-colors",level:4},{value:"4. Top K Frequent Elements",id:"4-top-k-frequent-elements",level:4},{value:"5. Kth Largest Element in an Array",id:"5-kth-largest-element-in-an-array",level:4},{value:"6. Find Peak Element",id:"6-find-peak-element",level:4},{value:"7. Search for a Range",id:"7-search-for-a-range",level:4},{value:"8. Merge Intervals",id:"8-merge-intervals",level:4},{value:"9. Search in Rotated Sorted Array",id:"9-search-in-rotated-sorted-array",level:4},{value:"10. Meeting Rooms II",id:"10-meeting-rooms-ii",level:4},{value:"11. Search a 2D Matrix II",id:"11-search-a-2d-matrix-ii",level:4},{value:"\ud83c\udfaf Study Tips / M\u1eb9o h\u1ecdc t\u1eadp",id:"-study-tips--m\u1eb9o-h\u1ecdc-t\u1eadp",level:2},{value:"Common Patterns / C\xe1c m\u1eabu th\u01b0\u1eddng g\u1eb7p:",id:"common-patterns--c\xe1c-m\u1eabu-th\u01b0\u1eddng-g\u1eb7p",level:3},{value:"Sorting Algorithms / Thu\u1eadt to\xe1n s\u1eafp x\u1ebfp:",id:"sorting-algorithms--thu\u1eadt-to\xe1n-s\u1eafp-x\u1ebfp",level:3},{value:"Common Mistakes / L\u1ed7i th\u01b0\u1eddng g\u1eb7p:",id:"common-mistakes--l\u1ed7i-th\u01b0\u1eddng-g\u1eb7p",level:3},{value:"\ud83d\udcca Practice Strategy / Chi\u1ebfn l\u01b0\u1ee3c luy\u1ec7n t\u1eadp",id:"-practice-strategy--chi\u1ebfn-l\u01b0\u1ee3c-luy\u1ec7n-t\u1eadp",level:2},{value:"Week 1: Foundation",id:"week-1-foundation",level:3},{value:"Week 2: Intermediate",id:"week-2-intermediate",level:3},{value:"Week 3: Advanced",id:"week-3-advanced",level:3},{value:"\ud83d\udd17 Related Topics / Ch\u1ee7 \u0111\u1ec1 li\xean quan",id:"-related-topics--ch\u1ee7-\u0111\u1ec1-li\xean-quan",level:2},{value:"\ud83d\udca1 Key Algorithms / Thu\u1eadt to\xe1n quan tr\u1ecdng",id:"-key-algorithms--thu\u1eadt-to\xe1n-quan-tr\u1ecdng",level:2},{value:"1. Binary Search",id:"1-binary-search",level:3},{value:"2. Quickselect",id:"2-quickselect",level:3},{value:"3. Dutch National Flag",id:"3-dutch-national-flag",level:3},{value:"\ud83c\udfaf Common Interview Questions / C\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n th\u01b0\u1eddng g\u1eb7p",id:"-common-interview-questions--c\xe2u-h\u1ecfi-ph\u1ecfng-v\u1ea5n-th\u01b0\u1eddng-g\u1eb7p",level:2},{value:"Basic Search Problems:",id:"basic-search-problems",level:3},{value:"Advanced Search Problems:",id:"advanced-search-problems",level:3},{value:"\ud83d\udcdd Code Templates / M\u1eabu code",id:"-code-templates--m\u1eabu-code",level:2},{value:"Binary Search Template:",id:"binary-search-template",level:3},{value:"Quickselect Template:",id:"quickselect-template",level:3},{value:"Merge Sort Template:",id:"merge-sort-template",level:3},{value:"\ud83d\udd0d Search Variations / C\xe1c bi\u1ebfn th\u1ec3 t\xecm ki\u1ebfm",id:"-search-variations--c\xe1c-bi\u1ebfn-th\u1ec3-t\xecm-ki\u1ebfm",level:2},{value:"Binary Search Variations:",id:"binary-search-variations",level:3},{value:"Sorting Variations:",id:"sorting-variations",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"sorting--searching-problems---leetcode-collection",children:"Sorting & Searching Problems - LeetCode Collection"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"B\u1ed9 s\u01b0u t\u1eadp b\xe0i t\u1eadp Sorting & Searching t\u1eeb LeetCode cho ph\u1ecfng v\u1ea5n Big Tech"})}),"\n",(0,i.jsx)(n.h2,{id:"-problem-list--danh-s\xe1ch-b\xe0i-t\u1eadp",children:"\ud83d\udccb Problem List / Danh s\xe1ch b\xe0i t\u1eadp"}),"\n",(0,i.jsx)(n.h3,{id:"easy-level--m\u1ee9c-\u0111\u1ed9-d\u1ec5",children:"Easy Level / M\u1ee9c \u0111\u1ed9 d\u1ec5"}),"\n",(0,i.jsx)(n.h4,{id:"1-merge-sorted-array",children:"1. Merge Sorted Array"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/merge-sorted-array/",children:"https://leetcode.com/problems/merge-sorted-array/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Two Pointers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Merge algorithm, in-place modification"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"2-first-bad-version",children:"2. First Bad Version"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/first-bad-version/",children:"https://leetcode.com/problems/first-bad-version/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Binary Search"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Google, Amazon, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Binary search, version control"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"medium-level--m\u1ee9c-\u0111\u1ed9-trung-b\xecnh",children:"Medium Level / M\u1ee9c \u0111\u1ed9 trung b\xecnh"}),"\n",(0,i.jsx)(n.h4,{id:"3-sort-colors",children:"3. Sort Colors"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/sort-colors/",children:"https://leetcode.com/problems/sort-colors/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Two Pointers, Sorting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Dutch national flag algorithm, three-way partitioning"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"4-top-k-frequent-elements",children:"4. Top K Frequent Elements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/top-k-frequent-elements/",children:"https://leetcode.com/problems/top-k-frequent-elements/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Hash Table, Heap, Sorting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Frequency counting, heap operations"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"5-kth-largest-element-in-an-array",children:"5. Kth Largest Element in an Array"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/kth-largest-element-in-an-array/",children:"https://leetcode.com/problems/kth-largest-element-in-an-array/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Divide and Conquer, Sorting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Quickselect algorithm, partition"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"6-find-peak-element",children:"6. Find Peak Element"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/find-peak-element/",children:"https://leetcode.com/problems/find-peak-element/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Binary Search"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Google, Amazon, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Binary search, peak finding"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"7-search-for-a-range",children:"7. Search for a Range"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/search-for-a-range/",children:"https://leetcode.com/problems/search-for-a-range/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Binary Search"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Google, Amazon, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Binary search variations, range finding"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"8-merge-intervals",children:"8. Merge Intervals"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/merge-intervals/",children:"https://leetcode.com/problems/merge-intervals/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Sorting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Interval merging, sorting"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"9-search-in-rotated-sorted-array",children:"9. Search in Rotated Sorted Array"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/search-in-rotated-sorted-array/",children:"https://leetcode.com/problems/search-in-rotated-sorted-array/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Binary Search"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Binary search in rotated array"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"10-meeting-rooms-ii",children:"10. Meeting Rooms II"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/meeting-rooms-ii/",children:"https://leetcode.com/problems/meeting-rooms-ii/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Heap, Greedy, Sorting"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Google, Amazon, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": Interval scheduling, heap usage"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"11-search-a-2d-matrix-ii",children:"11. Search a 2D Matrix II"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/search-a-2d-matrix-ii/",children:"https://leetcode.com/problems/search-a-2d-matrix-ii/"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Category"}),": Array, Binary Search, Divide and Conquer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Companies"}),": Amazon, Google, Microsoft, Facebook"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Concepts"}),": 2D binary search, matrix traversal"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-study-tips--m\u1eb9o-h\u1ecdc-t\u1eadp",children:"\ud83c\udfaf Study Tips / M\u1eb9o h\u1ecdc t\u1eadp"}),"\n",(0,i.jsx)(n.h3,{id:"common-patterns--c\xe1c-m\u1eabu-th\u01b0\u1eddng-g\u1eb7p",children:"Common Patterns / C\xe1c m\u1eabu th\u01b0\u1eddng g\u1eb7p:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Binary Search"}),": For sorted arrays and ranges"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Two Pointers"}),": For merging and partitioning"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Heap Operations"}),": For top-k problems"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quickselect"}),": For finding kth element"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interval Problems"}),": For scheduling and merging"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"sorting-algorithms--thu\u1eadt-to\xe1n-s\u1eafp-x\u1ebfp",children:"Sorting Algorithms / Thu\u1eadt to\xe1n s\u1eafp x\u1ebfp:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quick Sort"}),": O(n log n) average, O(n\xb2) worst"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Merge Sort"}),": O(n log n) guaranteed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Heap Sort"}),": O(n log n) guaranteed"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Counting Sort"}),": O(n + k) for small range"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Radix Sort"}),": O(d(n + k)) for integers"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-mistakes--l\u1ed7i-th\u01b0\u1eddng-g\u1eb7p",children:"Common Mistakes / L\u1ed7i th\u01b0\u1eddng g\u1eb7p:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Not handling edge cases in binary search"}),"\n",(0,i.jsx)(n.li,{children:"Infinite loops in sorting algorithms"}),"\n",(0,i.jsx)(n.li,{children:"Not considering space complexity"}),"\n",(0,i.jsx)(n.li,{children:"Missing duplicate handling"}),"\n",(0,i.jsx)(n.li,{children:"Incorrect boundary conditions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-practice-strategy--chi\u1ebfn-l\u01b0\u1ee3c-luy\u1ec7n-t\u1eadp",children:"\ud83d\udcca Practice Strategy / Chi\u1ebfn l\u01b0\u1ee3c luy\u1ec7n t\u1eadp"}),"\n",(0,i.jsx)(n.h3,{id:"week-1-foundation",children:"Week 1: Foundation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complete Easy problems (1-2)"}),"\n",(0,i.jsx)(n.li,{children:"Focus on basic binary search"}),"\n",(0,i.jsx)(n.li,{children:"Practice merge algorithms"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"week-2-intermediate",children:"Week 2: Intermediate"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Complete Medium problems (3-11)"}),"\n",(0,i.jsx)(n.li,{children:"Practice advanced sorting"}),"\n",(0,i.jsx)(n.li,{children:"Work on optimization techniques"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"week-3-advanced",children:"Week 3: Advanced"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Revisit problems with different approaches"}),"\n",(0,i.jsx)(n.li,{children:"Practice algorithm variations"}),"\n",(0,i.jsx)(n.li,{children:"Focus on edge case handling"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-related-topics--ch\u1ee7-\u0111\u1ec1-li\xean-quan",children:"\ud83d\udd17 Related Topics / Ch\u1ee7 \u0111\u1ec1 li\xean quan"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/interview/docs/leetcode/array/",children:"Array Problems"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-key-algorithms--thu\u1eadt-to\xe1n-quan-tr\u1ecdng",children:"\ud83d\udca1 Key Algorithms / Thu\u1eadt to\xe1n quan tr\u1ecdng"}),"\n",(0,i.jsx)(n.h3,{id:"1-binary-search",children:"1. Binary Search"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Used for searching in sorted arrays"}),"\n",(0,i.jsx)(n.li,{children:"Time complexity: O(log n)"}),"\n",(0,i.jsx)(n.li,{children:"Space complexity: O(1)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-quickselect",children:"2. Quickselect"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Used for finding kth element"}),"\n",(0,i.jsx)(n.li,{children:"Time complexity: O(n) average"}),"\n",(0,i.jsx)(n.li,{children:"Space complexity: O(1)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-dutch-national-flag",children:"3. Dutch National Flag"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Used for three-way partitioning"}),"\n",(0,i.jsx)(n.li,{children:"Time complexity: O(n)"}),"\n",(0,i.jsx)(n.li,{children:"Space complexity: O(1)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-common-interview-questions--c\xe2u-h\u1ecfi-ph\u1ecfng-v\u1ea5n-th\u01b0\u1eddng-g\u1eb7p",children:"\ud83c\udfaf Common Interview Questions / C\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n th\u01b0\u1eddng g\u1eb7p"}),"\n",(0,i.jsx)(n.h3,{id:"basic-search-problems",children:"Basic Search Problems:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"How to implement binary search?"}),"\n",(0,i.jsx)(n.li,{children:"What are the variations of binary search?"}),"\n",(0,i.jsx)(n.li,{children:"How to handle duplicates in search?"}),"\n",(0,i.jsx)(n.li,{children:"How to search in rotated arrays?"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"advanced-search-problems",children:"Advanced Search Problems:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"How to search in 2D matrices?"}),"\n",(0,i.jsx)(n.li,{children:"How to find peaks in arrays?"}),"\n",(0,i.jsx)(n.li,{children:"How to handle multiple search criteria?"}),"\n",(0,i.jsx)(n.li,{children:"How to optimize search for large datasets?"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-code-templates--m\u1eabu-code",children:"\ud83d\udcdd Code Templates / M\u1eabu code"}),"\n",(0,i.jsx)(n.h3,{id:"binary-search-template",children:"Binary Search Template:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function binarySearch(arr, target) {\n  let left = 0;\n  let right = arr.length - 1;\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n\n    if (arr[mid] === target) {\n      return mid;\n    } else if (arr[mid] < target) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n\n  return -1;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"quickselect-template",children:"Quickselect Template:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function quickselect(arr, k) {\n  const partition = (left, right) => {\n    const pivot = arr[right];\n    let i = left;\n\n    for (let j = left; j < right; j++) {\n      if (arr[j] <= pivot) {\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n        i++;\n      }\n    }\n\n    [arr[i], arr[right]] = [arr[right], arr[i]];\n    return i;\n  };\n\n  let left = 0;\n  let right = arr.length - 1;\n\n  while (left <= right) {\n    const pivotIndex = partition(left, right);\n\n    if (pivotIndex === k) {\n      return arr[k];\n    } else if (pivotIndex < k) {\n      left = pivotIndex + 1;\n    } else {\n      right = pivotIndex - 1;\n    }\n  }\n\n  return arr[k];\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"merge-sort-template",children:"Merge Sort Template:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function mergeSort(arr) {\n  if (arr.length <= 1) return arr;\n\n  const mid = Math.floor(arr.length / 2);\n  const left = mergeSort(arr.slice(0, mid));\n  const right = mergeSort(arr.slice(mid));\n\n  return merge(left, right);\n}\n\nfunction merge(left, right) {\n  const result = [];\n  let i = 0,\n    j = 0;\n\n  while (i < left.length && j < right.length) {\n    if (left[i] <= right[j]) {\n      result.push(left[i]);\n      i++;\n    } else {\n      result.push(right[j]);\n      j++;\n    }\n  }\n\n  return result.concat(left.slice(i), right.slice(j));\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-search-variations--c\xe1c-bi\u1ebfn-th\u1ec3-t\xecm-ki\u1ebfm",children:"\ud83d\udd0d Search Variations / C\xe1c bi\u1ebfn th\u1ec3 t\xecm ki\u1ebfm"}),"\n",(0,i.jsx)(n.h3,{id:"binary-search-variations",children:"Binary Search Variations:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"First Occurrence"}),": Find first index of target"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Last Occurrence"}),": Find last index of target"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Insert Position"}),": Find where to insert target"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Peak Finding"}),": Find local maximum"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rotated Array"}),": Search in rotated sorted array"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"sorting-variations",children:"Sorting Variations:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"In-place Sorting"}),": Modify array without extra space"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stable Sorting"}),": Preserve relative order of equal elements"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Adaptive Sorting"}),": Faster for partially sorted arrays"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"External Sorting"}),": Handle data larger than memory"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parallel Sorting"}),": Use multiple processors"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Next: ",(0,i.jsx)(n.a,{href:"../backtracking/README",children:"Backtracking Problems"})]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var i=r(6540);const s={},l=i.createContext(s);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);