"use strict";(self.webpackChunkfrontend_interview_guide=self.webpackChunkfrontend_interview_guide||[]).push([[8042],{8237:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var s=i(4848),l=i(8453);const t={},d="Linked List Problems - LeetCode Collection",r={id:"leetcode/linked-list/README",title:"Linked List Problems - LeetCode Collection",description:"B\u1ed9 s\u01b0u t\u1eadp b\xe0i t\u1eadp Linked List t\u1eeb LeetCode cho ph\u1ecfng v\u1ea5n companies",source:"@site/docs/leetcode/linked-list/README.md",sourceDirName:"leetcode/linked-list",slug:"/leetcode/linked-list/",permalink:"/interview/docs/leetcode/linked-list/",draft:!1,unlisted:!1,editUrl:"https://github.com/Nhi4912/interview/tree/main/docs/leetcode/linked-list/README.md",tags:[],version:"current",frontMatter:{},sidebar:"leetcodeSidebar",previous:{title:"String Problems - LeetCode Collection",permalink:"/interview/docs/leetcode/string/"},next:{title:"Tree & Graph Problems - LeetCode Collection",permalink:"/interview/docs/leetcode/tree-graph/"}},o={},c=[{value:"\ud83d\udccb Problem List / Danh s\xe1ch b\xe0i t\u1eadp",id:"-problem-list--danh-s\xe1ch-b\xe0i-t\u1eadp",level:2},{value:"Easy Level / M\u1ee9c \u0111\u1ed9 d\u1ec5",id:"easy-level--m\u1ee9c-\u0111\u1ed9-d\u1ec5",level:3},{value:"1. Delete Node in a Linked List",id:"1-delete-node-in-a-linked-list",level:4},{value:"2. Remove Nth Node From End of List",id:"2-remove-nth-node-from-end-of-list",level:4},{value:"3. Reverse Linked List",id:"3-reverse-linked-list",level:4},{value:"4. Merge Two Sorted Lists",id:"4-merge-two-sorted-lists",level:4},{value:"5. Palindrome Linked List",id:"5-palindrome-linked-list",level:4},{value:"6. Linked List Cycle",id:"6-linked-list-cycle",level:4},{value:"Medium Level / M\u1ee9c \u0111\u1ed9 trung b\xecnh",id:"medium-level--m\u1ee9c-\u0111\u1ed9-trung-b\xecnh",level:3},{value:"7. Add Two Numbers",id:"7-add-two-numbers",level:4},{value:"8. Odd Even Linked List",id:"8-odd-even-linked-list",level:4},{value:"9. Intersection of Two Linked Lists",id:"9-intersection-of-two-linked-lists",level:4},{value:"\ud83c\udfaf Study Tips / M\u1eb9o h\u1ecdc t\u1eadp",id:"-study-tips--m\u1eb9o-h\u1ecdc-t\u1eadp",level:2},{value:"Common Patterns / C\xe1c m\u1eabu th\u01b0\u1eddng g\u1eb7p:",id:"common-patterns--c\xe1c-m\u1eabu-th\u01b0\u1eddng-g\u1eb7p",level:3},{value:"Time Complexity Targets / M\u1ee5c ti\xeau \u0111\u1ed9 ph\u1ee9c t\u1ea1p:",id:"time-complexity-targets--m\u1ee5c-ti\xeau-\u0111\u1ed9-ph\u1ee9c-t\u1ea1p",level:3},{value:"Common Mistakes / L\u1ed7i th\u01b0\u1eddng g\u1eb7p:",id:"common-mistakes--l\u1ed7i-th\u01b0\u1eddng-g\u1eb7p",level:3},{value:"\ud83d\udcca Practice Strategy / Chi\u1ebfn l\u01b0\u1ee3c luy\u1ec7n t\u1eadp",id:"-practice-strategy--chi\u1ebfn-l\u01b0\u1ee3c-luy\u1ec7n-t\u1eadp",level:2},{value:"Week 1: Foundation",id:"week-1-foundation",level:3},{value:"Week 2: Intermediate",id:"week-2-intermediate",level:3},{value:"Week 3: Advanced",id:"week-3-advanced",level:3},{value:"\ud83d\udd17 Related Topics / Ch\u1ee7 \u0111\u1ec1 li\xean quan",id:"-related-topics--ch\u1ee7-\u0111\u1ec1-li\xean-quan",level:2},{value:"\ud83d\udca1 Key Algorithms / Thu\u1eadt to\xe1n quan tr\u1ecdng",id:"-key-algorithms--thu\u1eadt-to\xe1n-quan-tr\u1ecdng",level:2},{value:"1. Floyd&#39;s Cycle Detection Algorithm",id:"1-floyds-cycle-detection-algorithm",level:3},{value:"2. Two Pointer Technique",id:"2-two-pointer-technique",level:3},{value:"3. Reverse Linked List",id:"3-reverse-linked-list-1",level:3},{value:"\ud83c\udfaf Common Interview Questions / C\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n th\u01b0\u1eddng g\u1eb7p",id:"-common-interview-questions--c\xe2u-h\u1ecfi-ph\u1ecfng-v\u1ea5n-th\u01b0\u1eddng-g\u1eb7p",level:2},{value:"Basic Operations:",id:"basic-operations",level:3},{value:"Advanced Operations:",id:"advanced-operations",level:3},{value:"\ud83d\udcdd Code Templates / M\u1eabu code",id:"-code-templates--m\u1eabu-code",level:2},{value:"Basic Linked List Node:",id:"basic-linked-list-node",level:3},{value:"Two Pointer Template:",id:"two-pointer-template",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"linked-list-problems---leetcode-collection",children:"Linked List Problems - LeetCode Collection"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"B\u1ed9 s\u01b0u t\u1eadp b\xe0i t\u1eadp Linked List t\u1eeb LeetCode cho ph\u1ecfng v\u1ea5n companies"})}),"\n",(0,s.jsx)(n.h2,{id:"-problem-list--danh-s\xe1ch-b\xe0i-t\u1eadp",children:"\ud83d\udccb Problem List / Danh s\xe1ch b\xe0i t\u1eadp"}),"\n",(0,s.jsx)(n.h3,{id:"easy-level--m\u1ee9c-\u0111\u1ed9-d\u1ec5",children:"Easy Level / M\u1ee9c \u0111\u1ed9 d\u1ec5"}),"\n",(0,s.jsx)(n.h4,{id:"1-delete-node-in-a-linked-list",children:"1. Delete Node in a Linked List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/delete-node-in-a-linked-list/",children:"https://leetcode.com/problems/delete-node-in-a-linked-list/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Node deletion without head reference"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"2-remove-nth-node-from-end-of-list",children:"2. Remove Nth Node From End of List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/remove-nth-node-from-end-of-list/",children:"https://leetcode.com/problems/remove-nth-node-from-end-of-list/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List, Two Pointers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Two pointers, fast and slow pointer"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"3-reverse-linked-list",children:"3. Reverse Linked List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/reverse-linked-list/",children:"https://leetcode.com/problems/reverse-linked-list/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Iterative and recursive reversal"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"4-merge-two-sorted-lists",children:"4. Merge Two Sorted Lists"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/merge-two-sorted-lists/",children:"https://leetcode.com/problems/merge-two-sorted-lists/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Merge algorithm, dummy node"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"5-palindrome-linked-list",children:"5. Palindrome Linked List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/palindrome-linked-list/",children:"https://leetcode.com/problems/palindrome-linked-list/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List, Two Pointers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Reverse half, two pointers"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"6-linked-list-cycle",children:"6. Linked List Cycle"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/linked-list-cycle/",children:"https://leetcode.com/problems/linked-list-cycle/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List, Two Pointers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Floyd's cycle detection algorithm"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"medium-level--m\u1ee9c-\u0111\u1ed9-trung-b\xecnh",children:"Medium Level / M\u1ee9c \u0111\u1ed9 trung b\xecnh"}),"\n",(0,s.jsx)(n.h4,{id:"7-add-two-numbers",children:"7. Add Two Numbers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/add-two-numbers/",children:"https://leetcode.com/problems/add-two-numbers/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List, Math"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Digit by digit addition, carry handling"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"8-odd-even-linked-list",children:"8. Odd Even Linked List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Medium"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/odd-even-linked-list/",children:"https://leetcode.com/problems/odd-even-linked-list/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Separating odd and even nodes"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"9-intersection-of-two-linked-lists",children:"9. Intersection of Two Linked Lists"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Difficulty"}),": Easy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"LeetCode Link"}),": ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/intersection-of-two-linked-lists/",children:"https://leetcode.com/problems/intersection-of-two-linked-lists/"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Linked List, Two Pointers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Companies"}),": Various companies"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Key Concepts"}),": Finding intersection point"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-study-tips--m\u1eb9o-h\u1ecdc-t\u1eadp",children:"\ud83c\udfaf Study Tips / M\u1eb9o h\u1ecdc t\u1eadp"}),"\n",(0,s.jsx)(n.h3,{id:"common-patterns--c\xe1c-m\u1eabu-th\u01b0\u1eddng-g\u1eb7p",children:"Common Patterns / C\xe1c m\u1eabu th\u01b0\u1eddng g\u1eb7p:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Two Pointers"}),": Fast and slow pointer technique"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dummy Node"}),": Creating a sentinel node for easier manipulation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Reverse"}),": Reversing part or entire linked list"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Merge"}),": Combining two sorted linked lists"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cycle Detection"}),": Using Floyd's algorithm"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"time-complexity-targets--m\u1ee5c-ti\xeau-\u0111\u1ed9-ph\u1ee9c-t\u1ea1p",children:"Time Complexity Targets / M\u1ee5c ti\xeau \u0111\u1ed9 ph\u1ee9c t\u1ea1p:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Easy"}),": O(n) time, O(1) space"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Medium"}),": O(n) time, O(1) space"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"common-mistakes--l\u1ed7i-th\u01b0\u1eddng-g\u1eb7p",children:"Common Mistakes / L\u1ed7i th\u01b0\u1eddng g\u1eb7p:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Not handling null pointers"}),"\n",(0,s.jsx)(n.li,{children:"Forgetting to update pointers correctly"}),"\n",(0,s.jsx)(n.li,{children:"Not considering edge cases (empty list, single node)"}),"\n",(0,s.jsx)(n.li,{children:"Memory leaks in complex manipulations"}),"\n",(0,s.jsx)(n.li,{children:"Infinite loops in cycle detection"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-practice-strategy--chi\u1ebfn-l\u01b0\u1ee3c-luy\u1ec7n-t\u1eadp",children:"\ud83d\udcca Practice Strategy / Chi\u1ebfn l\u01b0\u1ee3c luy\u1ec7n t\u1eadp"}),"\n",(0,s.jsx)(n.h3,{id:"week-1-foundation",children:"Week 1: Foundation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Complete all Easy problems (1-6)"}),"\n",(0,s.jsx)(n.li,{children:"Focus on basic linked list operations"}),"\n",(0,s.jsx)(n.li,{children:"Practice pointer manipulation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"week-2-intermediate",children:"Week 2: Intermediate"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Complete Medium problems (7-9)"}),"\n",(0,s.jsx)(n.li,{children:"Practice two pointer techniques"}),"\n",(0,s.jsx)(n.li,{children:"Work on complex manipulations"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"week-3-advanced",children:"Week 3: Advanced"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Revisit problems with different approaches"}),"\n",(0,s.jsx)(n.li,{children:"Practice optimization techniques"}),"\n",(0,s.jsx)(n.li,{children:"Focus on edge case handling"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-related-topics--ch\u1ee7-\u0111\u1ec1-li\xean-quan",children:"\ud83d\udd17 Related Topics / Ch\u1ee7 \u0111\u1ec1 li\xean quan"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/interview/docs/leetcode/array/",children:"Array Problems"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-key-algorithms--thu\u1eadt-to\xe1n-quan-tr\u1ecdng",children:"\ud83d\udca1 Key Algorithms / Thu\u1eadt to\xe1n quan tr\u1ecdng"}),"\n",(0,s.jsx)(n.h3,{id:"1-floyds-cycle-detection-algorithm",children:"1. Floyd's Cycle Detection Algorithm"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Used to detect cycles in linked lists"}),"\n",(0,s.jsx)(n.li,{children:"Time complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Space complexity: O(1)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-two-pointer-technique",children:"2. Two Pointer Technique"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Used for finding middle, detecting cycles"}),"\n",(0,s.jsx)(n.li,{children:"Time complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Space complexity: O(1)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-reverse-linked-list-1",children:"3. Reverse Linked List"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Used in many linked list problems"}),"\n",(0,s.jsx)(n.li,{children:"Time complexity: O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Space complexity: O(1) iterative, O(n) recursive"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-common-interview-questions--c\xe2u-h\u1ecfi-ph\u1ecfng-v\u1ea5n-th\u01b0\u1eddng-g\u1eb7p",children:"\ud83c\udfaf Common Interview Questions / C\xe2u h\u1ecfi ph\u1ecfng v\u1ea5n th\u01b0\u1eddng g\u1eb7p"}),"\n",(0,s.jsx)(n.h3,{id:"basic-operations",children:"Basic Operations:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"How to reverse a linked list?"}),"\n",(0,s.jsx)(n.li,{children:"How to detect a cycle in a linked list?"}),"\n",(0,s.jsx)(n.li,{children:"How to find the middle node?"}),"\n",(0,s.jsx)(n.li,{children:"How to remove duplicates?"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"advanced-operations",children:"Advanced Operations:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"How to merge k sorted linked lists?"}),"\n",(0,s.jsx)(n.li,{children:"How to sort a linked list?"}),"\n",(0,s.jsx)(n.li,{children:"How to reorder a linked list?"}),"\n",(0,s.jsx)(n.li,{children:"How to copy a linked list with random pointers?"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-code-templates--m\u1eabu-code",children:"\ud83d\udcdd Code Templates / M\u1eabu code"}),"\n",(0,s.jsx)(n.h3,{id:"basic-linked-list-node",children:"Basic Linked List Node:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class ListNode {\n  constructor(val = 0, next = null) {\n    this.val = val;\n    this.next = next;\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"two-pointer-template",children:"Two Pointer Template:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"function twoPointerTemplate(head) {\n  if (!head || !head.next) return head;\n\n  let slow = head;\n  let fast = head;\n\n  while (fast && fast.next) {\n    slow = slow.next;\n    fast = fast.next.next;\n  }\n\n  return slow;\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:["Next: ",(0,s.jsx)(n.a,{href:"/interview/docs/leetcode/tree-graph/",children:"Tree & Graph Problems"})]})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var s=i(6540);const l={},t=s.createContext(l);function d(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);