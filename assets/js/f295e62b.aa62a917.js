"use strict";(self.webpackChunkfrontend_interview_guide=self.webpackChunkfrontend_interview_guide||[]).push([[2564],{5474:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var r=i(4848),s=i(8453);const t={},l="Performance Optimization Interview Preparation Guide",o={id:"frontend/performance/README",title:"Performance Optimization Interview Preparation Guide",description:"Table of Contents",source:"@site/docs/frontend/performance/README.md",sourceDirName:"frontend/performance",slug:"/frontend/performance/",permalink:"/interview/docs/frontend/performance/",draft:!1,unlisted:!1,editUrl:"https://github.com/Nhi4912/interview/tree/main/docs/frontend/performance/README.md",tags:[],version:"current",frontMatter:{},sidebar:"frontendSidebar",previous:{title:"Design Systems for Frontend Interviews",permalink:"/interview/docs/frontend/system-design/design-systems"},next:{title:"Problem: Lazy Loading Images and Components",permalink:"/interview/docs/frontend/performance/lazy-loading"}},c={},a=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Core Concepts",id:"core-concepts",level:2},{value:"Web Performance Fundamentals",id:"web-performance-fundamentals",level:3},{value:"1. Critical Rendering Path",id:"1-critical-rendering-path",level:4},{value:"2. Performance Budgets",id:"2-performance-budgets",level:4},{value:"3. Performance Optimization Principles",id:"3-performance-optimization-principles",level:4},{value:"Performance Optimization Techniques",id:"performance-optimization-techniques",level:3},{value:"Performance Metrics",id:"performance-metrics",level:2},{value:"Core Web Vitals",id:"core-web-vitals",level:3},{value:"1. Largest Contentful Paint (LCP)",id:"1-largest-contentful-paint-lcp",level:4},{value:"2. First Input Delay (FID)",id:"2-first-input-delay-fid",level:4},{value:"3. Cumulative Layout Shift (CLS)",id:"3-cumulative-layout-shift-cls",level:4},{value:"Additional Metrics",id:"additional-metrics",level:3},{value:"1. First Contentful Paint (FCP)",id:"1-first-contentful-paint-fcp",level:4},{value:"2. Time to Interactive (TTI)",id:"2-time-to-interactive-tti",level:4},{value:"3. Total Blocking Time (TBT)",id:"3-total-blocking-time-tbt",level:4},{value:"Optimization Techniques",id:"optimization-techniques",level:2},{value:"Loading Optimization",id:"loading-optimization",level:3},{value:"1. Resource Hints",id:"1-resource-hints",level:4},{value:"2. Code Splitting",id:"2-code-splitting",level:4},{value:"3. Tree Shaking",id:"3-tree-shaking",level:4},{value:"Rendering Optimization",id:"rendering-optimization",level:3},{value:"1. Virtual Scrolling",id:"1-virtual-scrolling",level:4},{value:"2. Memoization",id:"2-memoization",level:4},{value:"3. Lazy Loading",id:"3-lazy-loading",level:4},{value:"Common Interview Questions",id:"common-interview-questions",level:2},{value:"Q1: How would you optimize a slow-loading website?",id:"q1-how-would-you-optimize-a-slow-loading-website",level:3},{value:"Q2: Explain the difference between debouncing and throttling",id:"q2-explain-the-difference-between-debouncing-and-throttling",level:3},{value:"Q3: How do you measure and improve Core Web Vitals?",id:"q3-how-do-you-measure-and-improve-core-web-vitals",level:3},{value:"Q4: What is the difference between client-side and server-side rendering?",id:"q4-what-is-the-difference-between-client-side-and-server-side-rendering",level:3},{value:"Q5: How would you implement infinite scrolling?",id:"q5-how-would-you-implement-infinite-scrolling",level:3},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Modern Performance Features",id:"modern-performance-features",level:3},{value:"1. Web Workers",id:"1-web-workers",level:4},{value:"2. Service Workers",id:"2-service-workers",level:4},{value:"3. WebAssembly",id:"3-webassembly",level:4},{value:"Performance Monitoring",id:"performance-monitoring",level:3},{value:"1. Real User Monitoring (RUM)",id:"1-real-user-monitoring-rum",level:4},{value:"2. Synthetic Monitoring",id:"2-synthetic-monitoring",level:4},{value:"3. Performance APIs",id:"3-performance-apis",level:4},{value:"4. Error Tracking",id:"4-error-tracking",level:4},{value:"5. A/B Testing",id:"5-ab-testing",level:4},{value:"Tools and Monitoring",id:"tools-and-monitoring",level:2},{value:"Performance Tools",id:"performance-tools",level:3},{value:"1. Chrome DevTools",id:"1-chrome-devtools",level:4},{value:"2. External Tools",id:"2-external-tools",level:4},{value:"3. Monitoring Services",id:"3-monitoring-services",level:4},{value:"Practice Problems",id:"practice-problems",level:2},{value:"Problem 1: Optimize Image Loading",id:"problem-1-optimize-image-loading",level:3},{value:"Problem 2: Build a Performance Monitor",id:"problem-2-build-a-performance-monitor",level:3},{value:"Problem 3: Implement Virtual Scrolling",id:"problem-3-implement-virtual-scrolling",level:3},{value:"Problem 4: Create a Caching Strategy",id:"problem-4-create-a-caching-strategy",level:3},{value:"Problem 5: Optimize Bundle Size",id:"problem-5-optimize-bundle-size",level:3},{value:"Problem 6: Build a Service Worker",id:"problem-6-build-a-service-worker",level:3},{value:"Problem 7: Performance Budget Implementation",id:"problem-7-performance-budget-implementation",level:3},{value:"Problem 8: Optimize Critical Rendering Path",id:"problem-8-optimize-critical-rendering-path",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"performance-optimization-interview-preparation-guide",children:"Performance Optimization Interview Preparation Guide"}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#core-concepts",children:"Core Concepts"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#performance-metrics",children:"Performance Metrics"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#optimization-techniques",children:"Optimization Techniques"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#common-interview-questions",children:"Common Interview Questions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#advanced-topics",children:"Advanced Topics"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#tools-and-monitoring",children:"Tools and Monitoring"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#practice-problems",children:"Practice Problems"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"web-performance-fundamentals",children:"Web Performance Fundamentals"}),"\n",(0,r.jsx)(n.h4,{id:"1-critical-rendering-path",children:"1. Critical Rendering Path"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": The sequence of steps the browser takes to convert HTML, CSS, and JavaScript into pixels on the screen."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Steps"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parse HTML"})," \u2192 DOM Tree"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parse CSS"})," \u2192 CSSOM Tree"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Combine DOM + CSSOM"})," \u2192 Render Tree"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Layout"})," \u2192 Calculate positions and sizes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Paint"})," \u2192 Draw pixels to screen"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-performance-budgets",children:"2. Performance Budgets"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Set limits for performance metrics to ensure good user experience."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Common Budgets"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First Contentful Paint (FCP): < 1.5s"}),"\n",(0,r.jsx)(n.li,{children:"Largest Contentful Paint (LCP): < 2.5s"}),"\n",(0,r.jsx)(n.li,{children:"First Input Delay (FID): < 100ms"}),"\n",(0,r.jsx)(n.li,{children:"Cumulative Layout Shift (CLS): < 0.1"}),"\n",(0,r.jsx)(n.li,{children:"Total Bundle Size: < 250KB"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-performance-optimization-principles",children:"3. Performance Optimization Principles"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Core principles for improving web performance."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Principles"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimize critical resources"}),"\n",(0,r.jsx)(n.li,{children:"Reduce critical bytes"}),"\n",(0,r.jsx)(n.li,{children:"Optimize critical rendering path"}),"\n",(0,r.jsx)(n.li,{children:"Eliminate render-blocking resources"}),"\n",(0,r.jsx)(n.li,{children:"Minimize main thread work"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimization-techniques",children:"Performance Optimization Techniques"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Code Splitting"}),": Dynamic imports, route-based splitting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lazy Loading"}),": Images, components, routes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Caching Strategies"}),": Browser, CDN, application caching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minification"}),": JavaScript, CSS, HTML compression"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image Optimization"}),": Formats, compression, responsive images"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-metrics",children:"Performance Metrics"}),"\n",(0,r.jsx)(n.h3,{id:"core-web-vitals",children:"Core Web Vitals"}),"\n",(0,r.jsx)(n.h4,{id:"1-largest-contentful-paint-lcp",children:"1. Largest Contentful Paint (LCP)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Time from page load until the largest content element is visible."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Target"}),": < 2.5 seconds"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Optimize images"}),"\n",(0,r.jsx)(n.li,{children:"Use CDN"}),"\n",(0,r.jsx)(n.li,{children:"Implement lazy loading"}),"\n",(0,r.jsx)(n.li,{children:"Optimize server response time"}),"\n",(0,r.jsx)(n.li,{children:"Use resource hints"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-first-input-delay-fid",children:"2. First Input Delay (FID)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Time from user interaction to browser response."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Target"}),": < 100 milliseconds"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reduce JavaScript execution time"}),"\n",(0,r.jsx)(n.li,{children:"Code splitting"}),"\n",(0,r.jsx)(n.li,{children:"Remove unused JavaScript"}),"\n",(0,r.jsx)(n.li,{children:"Optimize event handlers"}),"\n",(0,r.jsx)(n.li,{children:"Use web workers"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-cumulative-layout-shift-cls",children:"3. Cumulative Layout Shift (CLS)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Measure of visual stability during page load."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Target"}),": < 0.1"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Optimization"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set explicit dimensions for images"}),"\n",(0,r.jsx)(n.li,{children:"Reserve space for dynamic content"}),"\n",(0,r.jsx)(n.li,{children:"Avoid inserting content above existing content"}),"\n",(0,r.jsx)(n.li,{children:"Use transform animations instead of layout changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"additional-metrics",children:"Additional Metrics"}),"\n",(0,r.jsx)(n.h4,{id:"1-first-contentful-paint-fcp",children:"1. First Contentful Paint (FCP)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Time until first content is painted on screen."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Target"}),": < 1.5 seconds"]}),"\n",(0,r.jsx)(n.h4,{id:"2-time-to-interactive-tti",children:"2. Time to Interactive (TTI)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Time until page becomes interactive."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Target"}),": < 3.8 seconds"]}),"\n",(0,r.jsx)(n.h4,{id:"3-total-blocking-time-tbt",children:"3. Total Blocking Time (TBT)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Total time when main thread was blocked."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Target"}),": < 200 milliseconds"]}),"\n",(0,r.jsx)(n.h2,{id:"optimization-techniques",children:"Optimization Techniques"}),"\n",(0,r.jsx)(n.h3,{id:"loading-optimization",children:"Loading Optimization"}),"\n",(0,r.jsx)(n.h4,{id:"1-resource-hints",children:"1. Resource Hints"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": HTML attributes that provide hints to the browser about resource loading."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Types"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'\x3c!-- Preload critical resources --\x3e\n<link rel="preload" href="critical.css" as="style" />\n<link rel="preload" href="critical.js" as="script" />\n\n\x3c!-- Prefetch non-critical resources --\x3e\n<link rel="prefetch" href="next-page.js" />\n\n\x3c!-- DNS prefetch --\x3e\n<link rel="dns-prefetch" href="//cdn.example.com" />\n\n\x3c!-- Preconnect to external domains --\x3e\n<link rel="preconnect" href="https://fonts.googleapis.com" />\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-code-splitting",children:"2. Code Splitting"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Technique to split code into smaller chunks loaded on demand."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"React Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Route-based splitting\nconst HomePage = lazy(() => import("./pages/HomePage"));\nconst AboutPage = lazy(() => import("./pages/AboutPage"));\n\n// Component-based splitting\nconst HeavyComponent = lazy(() => import("./components/HeavyComponent"));\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-tree-shaking",children:"3. Tree Shaking"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Dead code elimination to reduce bundle size."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Webpack Configuration"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'module.exports = {\n  mode: "production",\n  optimization: {\n    usedExports: true,\n    sideEffects: false,\n  },\n};\n'})}),"\n",(0,r.jsx)(n.h3,{id:"rendering-optimization",children:"Rendering Optimization"}),"\n",(0,r.jsx)(n.h4,{id:"1-virtual-scrolling",children:"1. Virtual Scrolling"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Technique to render only visible items in large lists."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function VirtualList({ items, itemHeight, containerHeight }) {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  const visibleItems = items.slice(\n    Math.floor(scrollTop / itemHeight),\n    Math.floor(scrollTop / itemHeight) + Math.ceil(containerHeight / itemHeight)\n  );\n\n  return (\n    <div onScroll={(e) => setScrollTop(e.target.scrollTop)}>\n      {visibleItems.map((item) => (\n        <div key={item.id} style={{ height: itemHeight }}>\n          {item.content}\n        </div>\n      ))}\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-memoization",children:"2. Memoization"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Caching expensive computations to avoid recalculation."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"React Example"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Memoize components\nconst ExpensiveComponent = memo(({ data }) => {\n  return <div>{expensiveCalculation(data)}</div>;\n});\n\n// Memoize values\nconst expensiveValue = useMemo(() => {\n  return expensiveCalculation(data);\n}, [data]);\n\n// Memoize callbacks\nconst handleClick = useCallback(() => {\n  console.log("Button clicked");\n}, []);\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-lazy-loading",children:"3. Lazy Loading"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Loading resources only when needed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Image Lazy Loading"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<img src="placeholder.jpg" data-src="actual-image.jpg" loading="lazy" />\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"JavaScript Implementation"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const imageObserver = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const img = entry.target;\n      img.src = img.dataset.src;\n      imageObserver.unobserve(img);\n    }\n  });\n});\n\ndocument.querySelectorAll("img[data-src]").forEach((img) => {\n  imageObserver.observe(img);\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-interview-questions",children:"Common Interview Questions"}),"\n",(0,r.jsx)(n.h3,{id:"q1-how-would-you-optimize-a-slow-loading-website",children:"Q1: How would you optimize a slow-loading website?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Answer"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Analyze Performance"}),": Use Lighthouse, WebPageTest, or Chrome DevTools"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimize Images"}),": Compress, use WebP format, implement lazy loading"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimize HTTP Requests"}),": Combine files, use sprites, enable compression"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimize JavaScript"}),": Code splitting, tree shaking, remove unused code"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use CDN"}),": Distribute content globally"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implement Caching"}),": Browser cache, CDN cache, application cache"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optimize Critical Path"}),": Inline critical CSS, defer non-critical JavaScript"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use Resource Hints"}),": Preload, prefetch, preconnect"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"q2-explain-the-difference-between-debouncing-and-throttling",children:"Q2: Explain the difference between debouncing and throttling"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Answer"}),":\n",(0,r.jsx)(n.strong,{children:"Debouncing"}),": Delays function execution until after a specified delay since the last call."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function debounce(func, delay) {\n  let timeoutId;\n  return function (...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(this, args), delay);\n  };\n}\n\n// Usage\nconst debouncedSearch = debounce(searchAPI, 300);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Throttling"}),": Limits function execution to once per specified time period."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"function throttle(func, limit) {\n  let inThrottle;\n  return function (...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n\n// Usage\nconst throttledScroll = throttle(handleScroll, 100);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"q3-how-do-you-measure-and-improve-core-web-vitals",children:"Q3: How do you measure and improve Core Web Vitals?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Answer"}),":\n",(0,r.jsx)(n.strong,{children:"Measurement"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Chrome DevTools Performance tab"}),"\n",(0,r.jsx)(n.li,{children:"Lighthouse"}),"\n",(0,r.jsx)(n.li,{children:"Web Vitals JavaScript library"}),"\n",(0,r.jsx)(n.li,{children:"Real User Monitoring (RUM)"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Improvement Strategies"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LCP"}),": Optimize images, use CDN, implement lazy loading"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"FID"}),": Reduce JavaScript execution, code splitting, web workers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CLS"}),": Set explicit dimensions, reserve space, avoid layout shifts"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"q4-what-is-the-difference-between-client-side-and-server-side-rendering",children:"Q4: What is the difference between client-side and server-side rendering?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Answer"}),":\n",(0,r.jsx)(n.strong,{children:"Client-Side Rendering (CSR)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JavaScript renders content in browser"}),"\n",(0,r.jsx)(n.li,{children:"Faster subsequent page loads"}),"\n",(0,r.jsx)(n.li,{children:"Better for interactive applications"}),"\n",(0,r.jsx)(n.li,{children:"Slower initial load"}),"\n",(0,r.jsx)(n.li,{children:"SEO challenges"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Server-Side Rendering (SSR)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Server renders HTML"}),"\n",(0,r.jsx)(n.li,{children:"Faster initial load"}),"\n",(0,r.jsx)(n.li,{children:"Better SEO"}),"\n",(0,r.jsx)(n.li,{children:"Slower subsequent interactions"}),"\n",(0,r.jsx)(n.li,{children:"More server resources"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Static Site Generation (SSG)"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pre-builds pages at build time"}),"\n",(0,r.jsx)(n.li,{children:"Fastest loading"}),"\n",(0,r.jsx)(n.li,{children:"Best SEO"}),"\n",(0,r.jsx)(n.li,{children:"Limited dynamic content"}),"\n",(0,r.jsx)(n.li,{children:"Requires rebuild for content changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"q5-how-would-you-implement-infinite-scrolling",children:"Q5: How would you implement infinite scrolling?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Answer"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'function InfiniteScroll({ fetchData, renderItem }) {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n\n  const loadMore = useCallback(async () => {\n    if (loading) return;\n\n    setLoading(true);\n    const newItems = await fetchData(page);\n    setItems((prev) => [...prev, ...newItems]);\n    setPage((prev) => prev + 1);\n    setLoading(false);\n  }, [page, loading, fetchData]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting) {\n          loadMore();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    const sentinel = document.querySelector("#sentinel");\n    if (sentinel) observer.observe(sentinel);\n\n    return () => observer.disconnect();\n  }, [loadMore]);\n\n  return (\n    <div>\n      {items.map(renderItem)}\n      <div id="sentinel">{loading && <div>Loading...</div>}</div>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,r.jsx)(n.h3,{id:"modern-performance-features",children:"Modern Performance Features"}),"\n",(0,r.jsx)(n.h4,{id:"1-web-workers",children:"1. Web Workers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Background threads for CPU-intensive tasks."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Main thread\nconst worker = new Worker("worker.js");\nworker.postMessage({ data: largeDataset });\nworker.onmessage = (e) => {\n  console.log("Result:", e.data);\n};\n\n// Worker thread (worker.js)\nself.onmessage = (e) => {\n  const result = expensiveCalculation(e.data.data);\n  self.postMessage(result);\n};\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-service-workers",children:"2. Service Workers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Scripts that run in the background for offline functionality and caching."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Register service worker\nif ("serviceWorker" in navigator) {\n  navigator.serviceWorker.register("/sw.js");\n}\n\n// Service worker implementation\nself.addEventListener("fetch", (event) => {\n  event.respondWith(\n    caches\n      .match(event.request)\n      .then((response) => response || fetch(event.request))\n  );\n});\n'})}),"\n",(0,r.jsx)(n.h4,{id:"3-webassembly",children:"3. WebAssembly"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": High-performance code execution."]}),"\n",(0,r.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,r.jsx)(n.h4,{id:"1-real-user-monitoring-rum",children:"1. Real User Monitoring (RUM)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Collecting performance data from actual users."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metrics to Track"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Page load times"}),"\n",(0,r.jsx)(n.li,{children:"Core Web Vitals"}),"\n",(0,r.jsx)(n.li,{children:"Error rates"}),"\n",(0,r.jsx)(n.li,{children:"User interactions"}),"\n",(0,r.jsx)(n.li,{children:"Geographic performance"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-synthetic-monitoring",children:"2. Synthetic Monitoring"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Lab-based testing."]}),"\n",(0,r.jsx)(n.h4,{id:"3-performance-apis",children:"3. Performance APIs"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Navigation Timing, Resource Timing."]}),"\n",(0,r.jsx)(n.h4,{id:"4-error-tracking",children:"4. Error Tracking"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Performance-related errors."]}),"\n",(0,r.jsx)(n.h4,{id:"5-ab-testing",children:"5. A/B Testing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definition"}),": Performance impact measurement."]}),"\n",(0,r.jsx)(n.h2,{id:"tools-and-monitoring",children:"Tools and Monitoring"}),"\n",(0,r.jsx)(n.h3,{id:"performance-tools",children:"Performance Tools"}),"\n",(0,r.jsx)(n.h4,{id:"1-chrome-devtools",children:"1. Chrome DevTools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Performance tab for profiling"}),"\n",(0,r.jsx)(n.li,{children:"Network tab for request analysis"}),"\n",(0,r.jsx)(n.li,{children:"Lighthouse for audits"}),"\n",(0,r.jsx)(n.li,{children:"Coverage tab for unused code"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-external-tools",children:"2. External Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"WebPageTest"}),"\n",(0,r.jsx)(n.li,{children:"GTmetrix"}),"\n",(0,r.jsx)(n.li,{children:"PageSpeed Insights"}),"\n",(0,r.jsx)(n.li,{children:"Pingdom"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-monitoring-services",children:"3. Monitoring Services"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Google Analytics"}),"\n",(0,r.jsx)(n.li,{children:"New Relic"}),"\n",(0,r.jsx)(n.li,{children:"DataDog"}),"\n",(0,r.jsx)(n.li,{children:"Sentry"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"practice-problems",children:"Practice Problems"}),"\n",(0,r.jsx)(n.h3,{id:"problem-1-optimize-image-loading",children:"Problem 1: Optimize Image Loading"}),"\n",(0,r.jsx)(n.p,{children:"Implement progressive image loading with placeholders and lazy loading."}),"\n",(0,r.jsx)(n.h3,{id:"problem-2-build-a-performance-monitor",children:"Problem 2: Build a Performance Monitor"}),"\n",(0,r.jsx)(n.p,{children:"Create a JavaScript library to measure and report Core Web Vitals."}),"\n",(0,r.jsx)(n.h3,{id:"problem-3-implement-virtual-scrolling",children:"Problem 3: Implement Virtual Scrolling"}),"\n",(0,r.jsx)(n.p,{children:"Build a virtual scrolling component for a large dataset."}),"\n",(0,r.jsx)(n.h3,{id:"problem-4-create-a-caching-strategy",children:"Problem 4: Create a Caching Strategy"}),"\n",(0,r.jsx)(n.p,{children:"Design and implement a multi-level caching system."}),"\n",(0,r.jsx)(n.h3,{id:"problem-5-optimize-bundle-size",children:"Problem 5: Optimize Bundle Size"}),"\n",(0,r.jsx)(n.p,{children:"Analyze and optimize a large JavaScript bundle using code splitting and tree shaking."}),"\n",(0,r.jsx)(n.h3,{id:"problem-6-build-a-service-worker",children:"Problem 6: Build a Service Worker"}),"\n",(0,r.jsx)(n.p,{children:"Implement a service worker for offline functionality and caching."}),"\n",(0,r.jsx)(n.h3,{id:"problem-7-performance-budget-implementation",children:"Problem 7: Performance Budget Implementation"}),"\n",(0,r.jsx)(n.p,{children:"Set up automated performance budgets and monitoring."}),"\n",(0,r.jsx)(n.h3,{id:"problem-8-optimize-critical-rendering-path",children:"Problem 8: Optimize Critical Rendering Path"}),"\n",(0,r.jsx)(n.p,{children:"Identify and optimize the critical rendering path for a web application."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This guide covers essential performance optimization concepts for frontend interviews at Big Tech companies. Focus on understanding Core Web Vitals, optimization techniques, and practical implementation strategies."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);